#include<bits/stdc++.h>
using namespace std;

const int MAXN = 300000 + 5;

vector<int> G[MAXN];
int fa[MAXN], siz[MAXN], dep[MAXN], top[MAXN], son[MAXN];
bool vis[MAXN];
int node[MAXN], ans[MAXN];
int num, n, x;
int tim;

void dfs1(int u, int f) {
    fa[u] = f;
    dep[u] = dep[f] + 1;
    siz[u] = 1;
    int maxs = -1;
    for(int i = 0; i < G[u].size(); i++) {
        int v = G[u][i];

        if(v == f) {
            continue;
        }
        dfs1(v, u);
        siz[u] += siz[v];
        if(siz[v] > maxs) {
            maxs = siz[v];
            son[u] = v;
        }
    }
}

void dfs2(int u, int tp) {
    top[u] = tp;
    if(!son[u]) {
        return;
    }
    dfs2(son[u], tp);
    for(int i = 0; i < G[u].size(); i++) {
        int v = G[u][i];

        if(v == fa[u] || v == son[u]) {
            continue;
        }
        dfs2(v, v);
    }
}

int LCA(int x, int y) {
    while(top[x] != top[y]) {
        if(dep[top[x]] < dep[top[y]]) {
            swap(x, y);
        }
        x = fa[top[x]];
    }
    if(dep[x] > dep[y]) {
        swap(x, y);
    }
    return x;
}

int dis(int u, int v) {
    return dep[u] + dep[v] - dep[LCA(u, v)] * 2;
}

void dfs(int step) {
    if(step == n + 1) {
        int m = 0;
        for(int i = 1; i <= n; i++) {
            if(vis[i]) {
                node[++m] = i;
            }
        }
        /*for(int i = 1; i <= m; i++) {
            printf("%d ", node[i]);
        }
        printf("\n");*/
        bool flag = true;
        for(int i = 1; i <= m; i++) {
            for(int j = i + 1; j <= m; j++) {
                if(dis(node[i], node[j]) > x) {
                    flag = false;
                    break;
                }
            }
            if(!flag) {
                break;
            }
        }
        if(flag) {
            ans[m]++;
        }
        return;
    }
    vis[step] = false;
    dfs(step + 1);
    vis[step] = true;
    dfs(step + 1);
}

int main() {
    freopen("youup.in", "r", stdin);
    freopen("youup.out", "w", stdout);

    scanf("%d%d%d", &num, &n, &x);
    for(int i = 1; i <= n - 1; i++) {
        int u, v;

        scanf("%d%d", &u, &v);
        G[u].push_back(v);
        G[v].push_back(u);
    }
    if(x == 0) {
        for(int i = 1; i <= n; i++) {
            if(i == 1) {
                printf("%d ", n);
            } else {
                printf("%d ", 0);
            }
            printf("\n");
        }
        return 0;
    }
    dfs1(1, 0);
    dfs2(1, 1);
    dfs(1);
    for(int i = 1; i <= n; i++) {
        printf("%d ", ans[i]);
    }
    printf("\n");

    return 0;
}
