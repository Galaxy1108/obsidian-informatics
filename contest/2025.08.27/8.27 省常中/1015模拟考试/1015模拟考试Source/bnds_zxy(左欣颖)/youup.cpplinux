#include <bits/stdc++.h>
using namespace std;
const int mo=998244353;
int n,x;
vector<int> bian[25];
int shu[25][25]={0}; 
void dfs(int x,int fa)
{
	for(int i=0;i<=n;i++) shu[x][i]=1;
	for(int to:bian[x])
	{
		if(to==fa) continue;
		dfs(to,x);
		for(int i=1;i<=n;i++) shu[x][i]+=shu[to][i-1];
	} 
}
int C[25][25]={0};
void get()
{
	int i,j;
	C[0][0]=1;
	for(i=1;i<=20;i++)
	{
		C[i][0]=1;
		for(j=1;j<=i;j++) C[i][j]=C[i-1][j]+C[i-1][j-1];
	}
}

int jie[50004],dao[50004];
int get_C(int x,int y)
{
	if(x<y) return 0;
	return 1ll*jie[x]*dao[y]%mo*dao[x-y]%mo;
}
int mi(int x,int y)
{
	int res=1;
	for(;y;y>>=1,x=1ll*x*x%mo)
	{
		if(y&1) res=1ll*res*x%mo;
	}
	return res;
}
int main()
{
	freopen("youup.in","r",stdin);
	freopen("youup.out","w",stdout);
	int num,i,j,k;
	scanf("%d",&num);	
	scanf("%d%d",&n,&x);
	if(num==1)
	{
		printf("%d ",n);
		for(i=2;i<=n;i++) printf("0 ");
		return 0;
	}
	if(num==2)//è‰¹ 
	{
		for(i=1;i<n;i++)
		{
			scanf("%d%d",&j,&k);
			bian[j].push_back(k);
			bian[k].push_back(j);
		}
		dfs(1,0);
		int ans=0;
		get();
		for(i=1;i<=n;i++)
		{
			ans=0;
			for(j=1;j<=n;j++)
			{
				if(shu[j][x]<i) continue;
				ans+=C[shu[j][x]-1][i-1];
			}
			printf("%d ",ans);
		}
	 	return 0;
	}
	jie[0]=1;
	for(i=1;i<=n;i++) jie[i]=1ll*jie[i-1]*i%mo;
	dao[n]=mi(jie[n],mo-2);
	for(i=n-1;i>=0;--i) dao[i]=1ll*dao[i+1]*(i+1)%mo; 
	if(num==4)
	{
		
		if(x==0)
		{
			printf("%d ",n);
			for(i=2;i<=n;i++) printf("0 ");
			return 0;
		}
		if(x==1)
		{
			printf("%d %d ",n,n-1);
			for(i=3;i<n;i++) printf("0 "); 
			return 0;
		}
		if(x>=2)
		{
			printf("%d ",n);
			for(i=2;i<=n;i++)
			{
				printf("%d ",get_C(n,i));
			}
			return 0;
		}
		return 0;
	}
	if(num==5)
	{
		int ans;
		printf("%d ",n);
		for(i=2;i<=n;i++)
		{
			ans=0;
			for(j=1;j<=n-i+1;j++) ans=(ans+1ll*get_C(min(x,n-j),i-1)%mo)%mo;
			printf("%d ",ans);
		}
		return 0;
	}
	return 0;
}