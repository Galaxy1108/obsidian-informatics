#include <bits/stdc++.h>
#define LL long long
using namespace std;
LL read ()
{
	LL x = 0, Fu = 1;
	char c = getchar();
	while(c < '0' || c > '9')
	{
		if(c == '-') Fu = -1;
		c = getchar();
	}
	while(c >= '0' && c <= '9')
	{
		x = x * 10 + (c - '0');
		c = getchar();
	}
	return x * Fu;
}
LL Min (LL x, LL y) { return x < y ? x : y; }
LL Max (LL x, LL y) { return x > y ? x : y; }
void Print (LL pos, LL T, LL opt) { printf("%lld\n", pos * opt + T); return ; }
LL cnt (LL opt, LL X, LL Y, LL S, LL mid)
{
	if(opt == 1)
	{
		LL d = S + (Y - X) * mid;
		LL A = (d - 1) / X; 
		LL res = 2 * mid + A;
		return res;
	}
	else
	{
		LL d = S + (Y - X) * mid;
		LL A = d / X;
		LL res = 2 * mid + A;
		return res;
	}
}
int main ()
{
	freopen("never.in", "r", stdin);
	freopen("never.out", "w", stdout);
	LL K = read();
	while(K--)
	{
		LL N = read(), S = read(), T = read(), X = read(), Y = read();
		S -= T;
//		printf("N = %lld, S = %lld, X = %lld, Y = %lld\n", N, S, X, Y);
		if(X > Y)
		{
			LL t = X; X = Y; Y = t; S = -S;
			if(S <= 0)
			{
				LL A = ((-S) / Y) + 1;
				if(N <= A) { Print(S + N * Y, T, -1); continue; }
				N -= A, S += A * Y;
			}
			else if(S > 0)
			{
				LL A = ((S - 1) / X);
				if(N <= A) { Print(S - N * X, T, -1); continue; }
				N -= A, S -= A * X;
			}
//			printf("N = %lld, S = %lld, X = %lld, Y = %lld\n", N, S, X, Y);
			LL l = 0, r = 10000000000LL;
			while(l < r)
			{
				LL mid = (l + r + 1) >> 1;
				if(cnt(1, X, Y, S, mid) <= N) l = mid;
				else r = mid - 1;
			}
//			printf("N = %lld, l = %lld, %lld\n", N, l, S);
			if(l)
			{
				N -= cnt(1, X, Y, S, l);
				S = (S + (Y - X) * l) % X;
			}
			if(!S) S = X;
			if(!N) Print(S, T, -1);
			else if(N == 1) Print(S - X, T, -1);
			else if(N == 2) Print(S + Y - X, T, -1);
			else
			{
				N -= 2;
				S += Y - X;
				Print(S - N * X, T, -1);
			}
		}
		else
		{
			if(S <= 0)
			{
				LL A = ((-(S + 1)) / Y) + 1;
//				printf("A = %lld\n", A);
				if(N <= A) { Print(S + N * Y, T, 1); continue; }
				N -= A, S += A * Y;
			}
			else if(S > 0)
			{
				LL A = (S / X);
				if(N <= A) { Print(S - N * X, T, 1); continue; }
				N -= A, S -= A * X;
			}
			LL l = 0, r = 10000000000LL;
			while(l < r)
			{
				LL mid = (l + r + 1) >> 1;
				if(cnt(2, X, Y, S, mid) <= N) l = mid;
				else r = mid - 1;
			}
			if(l)
			{
				N -= cnt(2, X, Y, S, l);
				S = (S + (Y - X) * l) % X;
			}
			if(!N) Print(S, T, 1);
			else if(N == 1) Print(S - X, T, 1);
			else if(N == 2) Print(S + Y - X, T, 1);
			else
			{
				N -= 2;
				S += Y - X;
				Print(S - N * X, T, 1);
			}
		}
	}
	return 0;
}