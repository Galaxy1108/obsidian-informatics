#include<bits/stdc++.h>
#define int long long
using namespace std;
namespace r_and_w{
    int read(){
        int s=0,f=1;
        char ch=getchar();
        while(ch>'9'||ch<'0'){
            if(ch=='-'){
                f=-1;
            }
            ch=getchar();
        }
        while(ch>='0'&&ch<='9'){
            s=s*10+(ch-'0');
            ch=getchar();
        }
        return s*f;
    }
    void write(int x){
        if(x<0){
            putchar('-');
            x=-x;
        }
        if(x>=10){
            write(x/10);
        }
        putchar(x%10+'0');
    }
    void write_endl(int x){
        write(x);
        putchar('\n');
    }
    void write_space(int x){
        write(x);
        putchar(' ');
    }
}
using namespace r_and_w;
const int N=3e3+10;
int prime[N],cnt;
bool is_prime[20010];
void init_prime(int n){
    for(int i=2;i<=n;i++){
        if(!is_prime[i]){
            prime[++cnt]=i;
        }
        for(int j=1;j<=cnt;j++){
            if(prime[j]*i>n){
                break;
            }
            is_prime[i*prime[j]]=1;
            if(i%prime[j]==0){
                break;
            }
        }
    }
}
int n,mod,a[N],del[N],p[N],inv[20010];
int qpow(int a,int b){
    int res=1;
    while(b){
        if(b&1){
            res=1ll*res*a%mod;
        }
        a=1ll*a*a%mod;
        b>>=1;
    }
    return res;
}
void init(int n){
    for(int i=0;i<=n;i++){
        inv[i]=qpow(i,mod-2);
    }
}
void break_down(int x){
    for(int i=1;i<=cnt;i++){
        p[i]=0;
    }
    for(int i=1;i<=cnt&&prime[i]<=x;i++){
        while(x%prime[i]==0){
            x/=prime[i];
            p[i]++;
        }
    }
}
void solve(){
    int ans=1;
    for(int i=2;i<=n;i++){
        break_down(i);
        int sum=1;
        for(int j=1;j<=cnt;j++){
            if(!p[j]&&!del[j])continue;
            del[j]+=p[j];
            a[j]+=p[j]*i-del[j];
            if(a[j]){
                sum=sum*(qpow(prime[j],a[j]+1)-1+mod)%mod*inv[prime[j]-1]%mod;
            }
        }
        ans=(ans+sum)%mod;
    }
    write_endl(ans);
}
bool chk_prime(int x){
    for(int i=2;i*i<=x;i++){
        if(x%i==0){
            return 0;
        }
    }
    return 1;
}
void work(){

}
signed main(){
    freopen("gonna.in","r",stdin);
    freopen("gonna.out","w",stdout);
    init_prime(20000);
    n=read(),mod=read();
    if(!chk_prime(mod)){
        work();
    }
    else{
        init(20000);
        solve();
    }
    // solve();
    return 0;
}