#include <bits/stdc++.h>
using namespace std;
const int N = 3e5 + 5;
int n,fir[N],nxt[N << 1],to[N << 1],ect = 0,x;
inline void addedge(int u1,int v1)
{
	nxt[++ect] = fir[u1];fir[u1] = ect;to[ect] = v1;
}
namespace Subtask1{
	const int N = 25;
	int dis[N][N];
	inline bool check(int S)
	{
		for(int i = 1;i <= n;i++)
			if((S >> (i - 1)) & 1)
				for(int j = 1;j <= n;j++)
					if((S >> (j - 1)) & 1)
						if(dis[i][j] > x) return false;
		return true;
	}
	void dfs(int *dis,int x,int fa)
	{
		dis[x] = dis[fa] + 1;
		for(int i = fir[x],y;y = to[i],i;i = nxt[i])
			if(y != fa) dfs(dis,y,x);
	}
	int ans[N];
	void Main()
	{
		scanf("%d%d",&n,&x);
		for(int i = 1;i < n;i++){
			int u,v;
			scanf("%d%d",&u,&v);
			addedge(u,v);addedge(v,u);
		}
		for(int i = 1;i <= n;i++)
		{
			dis[i][0] = -1;
			dfs(dis[i],i,0);
		}
		for(int S = 1;S < (1 << n);++S)
			if(check(S)) ans[__builtin_popcount(S)]++;
		for(int i = 1;i <= n;i++)
			printf("%d ",ans[i]);
	}
}
int main()
{
	freopen("youup.in","r",stdin);
	freopen("youup.out","w",stdout);
	int Num;
	scanf("%d",&Num);
	Subtask1::Main();
	return 0;
}
