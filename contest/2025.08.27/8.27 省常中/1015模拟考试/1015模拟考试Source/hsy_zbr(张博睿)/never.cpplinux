#include<bits/stdc++.h>
using namespace std;
#define re register
#define int long long
typedef double D ;

inline int qread()
{
	int x=0,f=1;
	char c=getchar();
	while(!isdigit(c))
	{
		if(c=='-')f=-1;
		c=getchar();
	}
	while(isdigit(c))
	{
		x=x*10+(c^48);
		c=getchar();
	}
	return x*f;
}

signed main()
{
	freopen("never.in","r",stdin);
	freopen("never.out","w",stdout);
	int T=qread();
	while(T--)
	{
		re int n=qread(),s=qread(),t=qread(),x=qread(),y=qread();
//		if(s>=t)
//		{
//			if(s>t+y)
//			{
//				s=t+(s-t)%x;
//				n-=(s-t)/x;
//			}
//		}
//		else
//		{
//			if(s<t-x)
//			{
//				s=t-(t-s)%y;
//				n-=(t-s)%y;
//			}
//		}
//		while(n>0)
//		{
//			if(s-t<x)
//			{
//				if(n>=2)
//				{
//					n-=2;
//					s+=y-x;
//				}
//				else break;
//			}
//			else
//			{
//				if(n>= ( ((s-t)/x)+1 ) )
//				{
//					s= s - ( ((s-t)/x)+1 )*x ;
//					n-=( ((s-t)/x)+1 ) ;
//				}
//				else break;
//			}
//		}
//		while(n>0)
//		{
//			if(s>=t)
//			{
//				if(n > (s-t)/x)
//				{
//					s=t+(s-t)%x-x;
//					n-=(s-t)/x;
//				}
//				else break;
//			}
//			else
//			{
//				if(n > ceil(  (D)(t-s)/(D)y  ) )
//				{
//					s=t+y-(t-s)%y;
//					n-=(int)ceil(  (D)(t-s)/(D)y  ) ;
//				}
//				else break;
//			}
//		}
		if(x==y)
		{
			if(s>=t)
			{
				int tmp=(s-t)/x+1;
				if(n<tmp)
				{
					s-=n*x;
					cout<<s<<endl;
					continue;
				}
				s-=tmp*x;
				n-=tmp;
				if(n%2)
				{
					s+=y;
					cout<<s<<endl;
				}
				else
				{
					cout<<s<<endl;
				}
			}
			else if(s<t)
			{
				int tmp=ceil( (D)(t-s)/(D)y  );
				if(n<tmp)
				{
					s+=n*y;
					cout<<s<<endl;
					continue;
				}
				s+=y*tmp;
				n-=tmp;
				if(n%2)
				{
					s-=x;
					cout<<s<<endl;
				}
				else
				{
					cout<<s<<endl; 
				}
			}
			continue;
		}
		while(n>0)
		{
			if(s>=t)
			{
				s-=x;
				n--;
			}
			else
			{
				s+=y;
				n--;
			}
		}
		cout<<s<<endl;
	}
	return 0;
}
