#include <bits/stdc++.h>
using namespace std;
long long gcd (long long a, long long b) {
	if (!b)
		return a;
	return gcd(b, a % b);
}
long long mul (long long x, long long y, long long MOD) {
	long long ans = 0;
	while (y) {
		if (y & 1)
			ans = (ans + x) % MOD;
		x = x * 2 % MOD;
		y >>= 1;
	}
	return ans;
}
int main () {
	freopen("never.in", "r", stdin);
	freopen("never.out", "w", stdout);
	int T;
	scanf("%d", &T);
	while (T--) {
		long long n, s, t, x, y;
		scanf("%lld%lld%lld%lld%lld", &n, &s, &t, &x, &y);
		//printf("%d\n", n % 7);
		long long tmp;
		if (s >= t) {
			tmp = (s - t) / x;
		}else {
			tmp = (t - s + y - 1) / y;
		}
		if (n <= tmp) {
			if (s >= t)
				printf("%lld\n", s - n * x);
			else
				printf("%lld\n", s + n * y);
			continue;
		}
		n -= tmp;
		s = (s >= t ? s - tmp * x : s + tmp * y);
		if (x <= y) {
			if (n < s / x + 2) {
				printf("%lld\n", s - n * x);
				continue;
			}
			n -= (s - t) / x + 2;
			s = (s - t) % x - x + y + t;
			long long k = x / gcd(x, y - x), num = 2 * k, a = s - t;
			num += (y - x) / x * k + ((y - x) % x * k + a + x - y) / x;
			/*for (int i = 1; i <= k; i++) {
				num += a / x;
				a = a % x + y - x;
			}*/
			n %= num;
			a = s - t;
			long long l = 0, r = k - 1;
			while (l <= r) {
				int mid = (l + r) >> 1;
				if (mid * 2 + (y - x) / x * mid + ((y - x) % x * mid + a + x - y) / x <= n)
					tmp = mid, l = mid + 1;
				else
					r = mid - 1;
			}
			n -= tmp * 2 + (y - x) / x * tmp + ((y - x) % x * tmp + a + x - y) / x;
			if (tmp) a = (a % x + mul(tmp - 1, y - x, x)) % x + y - x;
			a -= x * n;
			/*while (n) {
				if (a / x + 2 > n) {
					a = a - x * n;
					n = 0;
				}else {
					n -= a / x + 2;
					a = a % x + y - x;
				}
			}*/
			printf("%lld\n", t + a);
		}else {
			n--;
			s -= x;
			if (!n) {
				printf("%lld\n", s);
				continue;
			}
			long long a = t - s, b = a + y - 1;
			//b = a + y - 1;
			if (n < b / y + 1) {
				printf("%lld\n", s + n * y);
				continue;
			}
			n -= b / y + 1;
			b = b % y + x;
			long long k = y / gcd(x, y), num = k;
			num += x / y * k + (x % y * k + b - x) / y;
			n %= num;
			long long l = 0, r = k - 1;
			while (l <= r) {
				int mid = (l + r) >> 1;
				if (mid + x / y * mid + (x % y * mid + b - x) / y <= n)
					tmp = mid, l = mid + 1;
				else
					r = mid - 1;
			}
			n -= tmp + x / y * tmp + (x % y * tmp + b - x) / y;
			if (tmp) b = (b % y + mul(tmp - 1, x, y)) % y + x;
			b -= n * y;
			/*
			while (n) {
				if (b / y + 1 > n) {
					b = b - n * y;
					n = 0;
				}else {
					n -= b / y + 1;
					b = b % y + x;
				}
			}*/
			printf("%lld\n", t - (b - (y - 1)));
		}
	}
	return 0;
}
