#include<bits/stdc++.h>
#pragma GCC optimize(2)
using namespace std;
#define int long long

inline int read(){
	int x=0,f=1;char ch=getchar();
	while (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}
	while (ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}
	return x*f;
}

const int maxn=1e5+10;

int tim;
int n,t,x,y,s;
int dp[510],vis[510],len,idx,start;

int S(int k){   
    return (k*(k+1)/2);
}

int f(int a,int b,int c,int n){
    if(!a)return 0;
    if(a>=c || b>=c)
      return ((a/c)*S(n)+(n+1)*(b/c)+f(a%c,b%c,c,n));
    int m=(a*n+b)/c;
    return (m*n-f(c,c-b-1,a,m-1));
}

signed main(){
	freopen("never.in","r",stdin);
	freopen("never.out","w",stdout);
	tim=read();
	while(tim--){
		n=read(),s=read(),t=read(),x=read(),y=read();
		if(x<=100&&y<=100&&abs(s)<=100&&abs(t)<=100){
			memset(vis,0,sizeof(vis));
			dp[0]=s,vis[s+200]=1;
			len=0,idx=0;
			for(int i=1;i<=n;i++){
				if(s<t) s+=y;
				else s-=x;
				if(vis[s+200]){
					for(int j=0;j<i;j++){
						if(dp[j]==s){ len=i-j;start=j;break; }
					}
					idx=i-1;break;
				} 
				dp[i]=s;vis[s+200]=1;
			}
			if(idx==0){
				printf("%lld\n",s);
			}
			else{
				int tmp=n-idx;
				tmp%=len;if(tmp==0) tmp=len;
				printf("%lld\n",dp[start+tmp-1]);
			}
		}
		else{
			if(x==y){
				if(s==t){
					int k1,k2=s;
					if(s>=t) k1=s-x;
					else k1=s+y;
					if(n%2==1) printf("%lld\n",k1);
					else printf("%lld\n",k2);
				}
				else{
					int tmp=(abs(t-s)-1)/x+1;
					if(s>=t) s-=tmp*x;
					else s+=tmp*y;
					int res=n-(tmp-1);
					int k1=s,k2;
					if(s>=t) k2=s-x;
					else k2=s+y;
					if(res%2==1) printf("%lld\n",k1);
					else printf("%lld\n",k2);
				} 
			}
			else cout<<1<<endl;
		}
	}
	return 0;
}