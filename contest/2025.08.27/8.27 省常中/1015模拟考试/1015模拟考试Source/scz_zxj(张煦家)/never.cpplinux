#include <bits/stdc++.h>
#define ll __int128
#define writeln(X) write(X), putchar('\n')
using namespace std;
static char buf[1 << 21], *p1 = buf, *p2 = buf, obuf[1 << 21], *O = obuf;
#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2) ? EOF : *p1++)
#define putchar(X) *O++ = (X)
template < typename T >
inline void read(T &X)
{
    X = 0; bool f = false; char ch = getchar();
    while (!isdigit(ch)) {f |= ch == '-'; ch = getchar();}
    while (isdigit(ch)) {X = (X * 10) + (ch ^ 48); ch = getchar();}
    X = f ? -X : X;
}
template < typename T >
inline void write(T X)
{
    if (X == 0) {putchar('0'); return;}
    if (X < 0) {putchar('-'); X = -X;}
    static int cnt = 0, num[21];
    while (X) {num[++cnt] = X % 10; X /= 10;}
    while (cnt) putchar(num[cnt--] ^ 48);
}
int T;
ll n, s, t, x, y;
int main()
{
    freopen("never.in", "r", stdin);
    freopen("never.out", "w", stdout);
    read(T);
    while (T--)
    {
        read(n); read(s); read(t); read(x); read(y);
        if ((s - t - x) / x >= n) writeln(s - n * x);
        else if ((t - s - y - 1) / y >= n) writeln(s + n * y);
        else writeln(t - x + ((((((n * y) % (x + y)) + s) % (x + y)) + (x + y) - ((t - x) % (x + y)) + (x + y)) % (x + y)));
    }
    fwrite(obuf,O - obuf, 1, stdout);
    fclose(stdin);
    fclose(stdout);
    return 0;
}