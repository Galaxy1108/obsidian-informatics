#include<bits/stdc++.h>
using namespace std;
#define int long long
const int Mx=3e3+5;
int n,mod;
int prime[Mx],cnt=0,vis[Mx];
int qpow(int a,int b){
    int res=1;
    while(b){
        if(b&1)res=res*a%mod;
        a=a*a%mod;
        b>>=1;
    }
    return res;
}
void Prime(){
    for(int i=2;i<Mx;i++){
        if(!vis[i])prime[++cnt]=i;
        for(int j=2;i*j<Mx;j++){
            vis[i*j]=1;
        }
    }
}
int mi[Mx];
void apart(int x,int val){
    if(x==1)return;
    for(int i=1;i<=cnt&&prime[i]<=x;i++){
        int res=0;
        while(x%prime[i]==0){
            x/=prime[i];
            res++;
        }
        mi[i]+=(res*val);
    }
}
int cc[Mx];
int calc_he(int p,int a){
    if(p==1)return 1;
    if(a==1)return p;
    if(a==0)return 1;
    int res=calc_he(p,a/2);
    if(a%2==0)return (res+res*qpow(p,a/2)%mod)%mod;
    else return (res+res*qpow(p,a/2)%mod+qpow(p,a))%mod;
}
int calc_g(int x){
    memset(mi,0,sizeof(mi));
    for(int i=1;i<=x;i++)cc[i]=i-(x-i+1);
    for(int i=1;i<=x;i++)apart(i,cc[i]);
    int res=1;
    for(int i=1;i<=cnt;i++)
        if(mi[i]!=0)res=res*(calc_he(prime[i],mi[i])+1)%mod;
    return res;
}
signed main(){
    freopen("gonna.in","r",stdin);
    freopen("gonna.out","w",stdout);
    scanf("%lld%lld",&n,&mod);
    Prime();
    int ans=0;
    for(int i=1;i<=n;i++)ans=(ans+calc_g(i))%mod;
    printf("%lld\n",ans);
    return 0;
}