#include<bits/stdc++.h>
using namespace std;
inline long long read()
{
	long long s=0,k=1;
	char c=getchar();
	while(!isdigit(c))
	{
		k=(c=='-')?-1:1;
		c=getchar();
	}
	while(isdigit(c))
	{
		s=s*10+c-'0';
		c=getchar();
	}
	return s*k;
}
#define d read()
#define ll long long
#define Maxn 10010
#define Size 20010
#define mp make_pair
#define pb push_back
#define fi first
#define se second
ll exgcd(ll a,ll b,ll &x,ll &y)
{
	if(b==0)
	{
		x=1,y=0;
		return a;
	}
	ll e=exgcd(b,a%b,y,x);
	y=y-x*(a/b);
	return e;
}
ll inv(ll a,ll b)
{
	ll x,y;
	exgcd(a,b,x,y);
	ll qwq;
	if(x<0) qwq=(1-x+b-1)/b;
	else qwq=(1-x)/b;
	x+=qwq*b,y-=qwq*a;
	return x;
}
bool isprime[Size];
map<ll,ll>Primed;
vector<ll>prime;
ll a[Size][2270];
void pre(ll n)
{
	isprime[1]=1;
	for(int i=2;i<=n;i++)
	{
		if(!isprime[i])
		{
			prime.pb(i);
			Primed[i]=prime.size()-1;
			a[i][prime.size()-1]=1;
		}
		for(int j=0;j<prime.size();j++)
		{
			if(i*prime[j]>n) break;
			isprime[i*prime[j]]=1;
			for(int k=0;k<prime.size();k++)
				a[i*prime[j]][k]=a[i][k];
			a[i*prime[j]][j]++;
			if(i%prime[j]==0) break;
		}
	}
}
ll ksm(ll a,ll b,ll m)
{
	ll ans=1;
	while(b)
	{
		if(b&1) ans=ans*a%m;
		a=a*a%m;
		b>>=1;
	}
	return ans;
}
ll calc(ll x,ll n,ll p)//1+x+...+x^n
{
	return (ksm(x,n+1,p)-1)%p*inv(x-1,p)%p;
}
ll Q[2270];
ll jie[2270];
int main()
{
	freopen("gonna.in","r",stdin);
	freopen("gonna.out","w",stdout);
	ll n=d,p=d;
	pre(n);
	ll ans=1;
	for(int i=0;i<prime.size();i++) Q[i]=jie[i]=0;
	for(int i=2;i<=n;i++)
	{
		for(int j=0;j<prime.size();j++)
			Q[j]+=a[i][j]*(i-1)-jie[j];
		ll now=1;
		for(int j=0;j<prime.size();j++)
			jie[j]+=a[i][j],now=now*calc(prime[j],Q[j],p)%p;
		ans=(ans+now)%p;
	}
	printf("%lld\n",(ans%p+p)%p);
}