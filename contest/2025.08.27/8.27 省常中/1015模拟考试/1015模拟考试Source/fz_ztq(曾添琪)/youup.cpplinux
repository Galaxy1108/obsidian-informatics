#include <bits/stdc++.h>
#define FOR(i,j,k) for(int i=j; i<=k; ++i)
#define ROF(i,j,k) for(int i=j; i>=k; --i)
inline int read (void) {
  int x = 0, f = 1, ch = getchar();
  while(!isdigit(ch)) { if(ch == '-') f = -f; ch = getchar(); }
  while(isdigit(ch)) { x = x * 10 + ch - '0'; ch = getchar(); }
  return x * f;
}
const int maxn = 200005;
const int mod = 998244353;
inline int ksm (int a, int b) {
  int c = 1;
  while(b) {
    if(b&1) c = 1ll * c * a % mod;
    a = 1ll * a * a % mod; b >>= 1;
  } return c;
}
int ans[maxn], fac[maxn], inv[maxn];
int tot_edge, head[maxn], to[maxn<<1], link[maxn<<1];
inline void add_edge (int x, int y) {
  to[++tot_edge] = y;
  link[tot_edge] = head[x];
  head[x] = tot_edge;
}
int fa[maxn], dep[maxn], a[maxn];
void dfs (int x) {
  dep[x] = dep[fa[x]] + 1;
  for(int now=head[x]; now; now=link[now]) {
    if(to[now] == fa[x]) continue;
    fa[to[now]] = x;
    dfs (to[now]);
  }
}
int dist (int x, int y) {
  int res = 0;
  while(x != y) {
    if(dep[x] < dep[y]) std::swap (x, y);
    ++ res; x = fa[x];
  } return res;
}
inline int binom (int n, int m) {
  return m < 0 || n < m ? 0 : 1ll * fac[n] * inv[m] % mod * inv[n-m] % mod;
}
int main (void) {
  freopen("youup.in", "r", stdin);
  freopen("youup.out", "w", stdout);
  int num = read();
  if(num == 1) {
    int n = read(); ans[1] = n;
    FOR(i,1,n) printf("%d%c", ans[i], i==n?10:32);
  } else if(num == 2) {
    int n = read(), k = read();
    FOR(i,2,n) {
      int x = read(), y = read();
      add_edge (x, y);
      add_edge (y, x);
    } dfs (1);
    FOR(i,1,n) FOR(j,1,n) if(dist(i, j) <= k) a[i] |= 1 << j-1;
    FOR(i,1,(1<<n)-1) {
      bool flag = 1;
      FOR(j,1,n) if(i>>j-1&1) if((i&a[j]) != i) { flag = 0; break; }
      if(flag) ++ ans[__builtin_popcount(i)];
    }
    FOR(i,1,n) printf("%d%c", ans[i], i==n?10:32);
  } else if(num == 5) {
    int n = read(), k = read() + 1;
    fac[0] = 1; FOR(i,1,n) fac[i] = 1ll * fac[i-1] * i % mod;
    inv[n] = ksm (fac[n], mod-2); ROF(i,n,1) inv[i-1] = 1ll * inv[i] * i % mod;
    FOR(i,1,n) ans[i] = (1ll * (n - k + 1) * binom (k-1, i-1) + binom (k-1, i)) % mod;
    FOR(i,1,n) printf("%d%c", ans[i], i==n?10:32);
  } else {
    int n = read(), k = read(); ans[1] = n;
    if(k == 1) ans[2] = n - 1;
    else if(k >= 2) {
      fac[0] = 1; FOR(i,1,n) fac[i] = 1ll * fac[i-1] * i % mod;
      inv[n] = ksm (fac[n], mod-2); ROF(i,n,1) inv[i-1] = 1ll * inv[i] * i % mod;
      FOR(i,2,n) ans[i] = 1ll * fac[n] * inv[i] % mod * inv[n-i] % mod;
    }
    FOR(i,1,n) printf("%d%c", ans[i], i==n?10:32);
  }
  return 0;
}