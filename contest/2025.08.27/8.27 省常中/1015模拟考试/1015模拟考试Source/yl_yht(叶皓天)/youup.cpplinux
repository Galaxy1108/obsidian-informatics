#include <bits/stdc++.h>
namespace IO {
  #define iL (1 << 20)
  char ibuf[iL], *iS = ibuf + iL, *iT = ibuf + iL;
  #define gc() ((iS == iT) ? (iT = (iS = ibuf) + fread(ibuf, 1, iL, stdin), iS == iT ? EOF : *iS ++) : *iS ++)
  template<class T> inline void read(T &x) {
    x = 0;int f = 0;char ch = gc();
    for (; !isdigit(ch); f |= ch == '-', ch = gc());
    for (; isdigit(ch); x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc());
    x = (f == 1 ? ~ x + 1 : x);
  }
  char Out[iL], *iter = Out;
  #define flush() fwrite(Out, 1, iter - Out, stdout), iter = Out
  template<class T> inline void write(T x, char ch = '\n') {
    T l, c[35];
    if (x < 0) *iter ++ = '-', x = ~ x + 1;
    for (l = 0; !l || x; c[l] = x % 10, l++, x /= 10);
    for (; l; -- l, *iter ++ = c[l] + '0');*iter ++ = ch;
    flush();
  }
}
using namespace IO;
#define N 300005
#define ll long long
#define DEBUG
#define pii pair<int, int>
#define mp make_pair
#define fi first
#define MOD 998244353
#define se second
using namespace std;
int Num, n, k, de[N]; vector<int> g[N];
void add(int x, int y) { g[x].push_back(y); }
namespace sub1 {
  int dep[N], ans[N];
  void dfs(int x, int fa) {
    dep[x] = dep[fa] + 1;
    for (auto y : g[x]) {
      if (y == fa) continue;
      dfs(y, x);
    }
  }
  void main() {
    for (int s = 0; s < (1 << n); s++) {
      int fl = 1;
      for (int i = 1; i <= n; i++) {
        if (!((s >> i - 1) & 1)) continue;
        dfs(i, 0);
        for (int j = 1; j <= n; j++) {
          if (((s >> j - 1) & 1) && dep[j] - 1 > k) { fl = 0; break; }
        }
        if (!fl) break;
      }
      ans[__builtin_popcount(s)] += fl;
    }
    for (int i = 1; i <= n; i++) write(ans[i], ' ');
  }
}
ll qpow(ll a, ll b) { ll r = 1; while (b) { if (b & 1ll) r = r * a % MOD; a = a * a % MOD, b >>= 1ll; } return r; }
namespace sub2 {
  ll ans[N];
  void main() {
    ans[1] = n;
    if (k >= 1) { ans[2] = n - 1; }
    if (k >= 2) {
      ll val = 1;
      for (int i = 1; i <= n; i++) {
        val = val * (n - i + 1) % MOD;
        val = val * qpow(i, MOD - 2) % MOD;
        ans[i] = val;
      }
    }
    for (int i = 1; i <= n; i++) write(ans[i], ' ');
  }
}
int main() {
// #ifndef ONLINE_JUDGE
  // freopen("test.in", "r", stdin);
  // freopen("test.out", "w", stdout);
// #endif
  freopen("youup.in", "r", stdin);
  freopen("youup.out", "w", stdout);
  read(Num), read(n), read(k);
  for (int i = 1, x, y; i < n; i++) read(x), read(y), add(x, y), add(y, x), de[x] ++, de[y] ++;
  if (n <= 20) { sub1::main(); return 0; }
  if (de[1] == n - 1) { sub2::main(); return 0; }
  return 0;
}