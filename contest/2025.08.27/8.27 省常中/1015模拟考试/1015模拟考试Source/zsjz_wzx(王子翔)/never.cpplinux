//#pragma GCC optimize(3)
//#pragma GCC optimize("inline")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse3","sse2","sse")
//#pragma GCC diagnostic error "-std=c++14"
//#pragma GCC diagnostic error "-fwhole-program"
//#pragma GCC diagnostic error "-fcse-skip-blocks"
//#pragma GCC diagnostic error "-funsafe-loop-optimizations"
//#pragma GCC optimize("fast-math","unroll-loops","no-stack-protector","inline")
#include<bits/stdc++.h>
#define ll long long
#define N 100005
#define inf 1000000007
#define fo(i,a,b) for(int i=a;i<=b;++i)
#define fd(i,a,b) for(int i=a;i>=b;--i)
using namespace std;
int T;
ll n,s,t,x,y,cnt;
int read(){
	int res=0,f=1;
	char ch=getchar();
	while(ch<'0'||ch>'9'){
		if(ch=='-'&&((ch=getchar())>='0'&&(ch)<='9')) f=-1;
		else ch=getchar();
	}
	while(ch>='0'&&ch<='9')res=res*10+ch-'0',ch=getchar();
	return res*f;
}
int main(){
	freopen("never.in","r",stdin);
	freopen("never.out","w",stdout);
	T=read();
	while(T--){
		scanf("%lld%lld%lld%lld%lld",&n,&s,&t,&x,&y);
		cnt=n;
		int dS;
		if(x==y){
			s-=t;
			if(s>=0){
				cnt-=s/x;
				s%=x;
				dS=s-x;
				if(cnt<0){
					printf("%lld\n",s-n*x+t);
					continue;
				}
			}
			else{
				cnt-=(int)abs(s)/x;
				s=-(abs(s)%x);
				if(s<0)
				dS=s+x;
				else dS=s-x;
				if(cnt<0){
					printf("%lld\n",s+n*x+t);
					continue;
				}
			}
			printf("%lld\n",t+((cnt&1)?dS:s));
			continue;
		}
		// else{
		// 	int cur=s;
		// 	while(cnt){
				
		// 	}
		// }
	}
}


