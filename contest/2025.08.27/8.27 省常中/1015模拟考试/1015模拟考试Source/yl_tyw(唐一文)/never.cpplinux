#include <bits/stdc++.h>
#define il inline
#define re register
#define ll long long
#define ull unsigned ll
#define db double
#define ldb long db
#define fi first
#define se second
#define pii pair<int, int>
#define MP(x, y) make_pair(x, y)
#define eb emplace_back
using namespace std;
namespace FastIO {
  const int iL = 1 << 20;
  char ibuf[iL], *iS = ibuf + iL, *iT = ibuf + iL;
  #define GC() (iS == iT) ? \
  (iT = (iS = ibuf) + fread(ibuf, 1, iL, stdin), (iS == iT) ? EOF : *iS++) : *iS++
  template <class T>il void read(T &x) {
    x = 0;
    char c = GC(); bool flg = false;
    while(!isdigit(c)) {flg |= c == '-'; c = GC();}
    while(isdigit(c)) {x = (x << 1) + (x << 3) + (c & 15); c = GC();}
    if(flg) x = -x;
  }
  template <class T>il void gread(T &x) {
    x = 0;
    char c = getchar(); bool flg = false;
    while(!isdigit(c)) {flg |= c == '-'; c = getchar();}
    while(isdigit(c)) {x = (x << 1) + (x << 3) + (c & 15); c = getchar();}
    if(flg) x = -x;
  }
  il int read() {
    int x = 0;
    char c = GC(); bool flg = false;
    while(!isdigit(c)) {flg |= c == '-'; c = GC();}
    while(isdigit(c)) {x = (x << 1) + (x << 3) + (c & 15); c = GC();}
    return flg ? -x : x;
  }
  char Out[iL], *iter = Out;
  #define Flush() fwrite(Out, 1, iter - Out, stdout); iter = Out
  template <class T>il void write(T x, char LastChar = '\n') {
    int c[35], len = 0;
    if(x < 0) {*iter++ = '-'; x = -x;}
    do {c[++len] = x % 10; x /= 10;} while(x);
    while(len) *iter++ = c[len--] + '0';
    *iter++ = LastChar; Flush();
  }
}
using namespace FastIO;
#define N 100005
mt19937 rnd(time(0));
il ll gcd(ll a, ll b) {
  for(; b; b ^= a ^= b ^= a = a % b);
  return a;
}
ll n, s, t, x, y;
namespace sub1 {
  il void MAIN() {
    for(re int i = 0; i < n; ++i) {
      if(s >= t) s -= x;
      else s += y;
    }
    write(s);
  }
}
namespace sub2 {
  map<ll, int> mp; vector<ll> id; int cnt;
  il void MAIN() {
    map<ll, int>().swap(mp); vector<ll>().swap(id);
    id.eb(s); mp[s] = cnt = 0;
    int bg, ed;
    while(1) {
      if(s >= t) s -= x;
      else s += y;
      if(mp.count(s)) {
        bg = mp[s]; ed = cnt; break;
      }
      mp[s] = ++cnt; id.eb(s);
    }
    if(n <= ed) {write(id[n]); return ;}
//    printf("%d %d\n", bg, ed);
    n -= ed; write(id[bg + (n - 1) % (ed - bg + 1)]);
  }
}
namespace sub3 {
  il void MAIN() {
    if(s < t) {
      ll p = (t - s - 1) / y + 1;
      if(p >= n) {write(s + n * y); return ;}
      n -= p; s += p * y;
      write(s - (n & 1) * x);
      return ;
    }
    ll p = (s - t) / x;
    if(p >= n) {write(s - n * x); return ;}
    n -= p; s -= p * x;
    write(s - (n & 1) * x);
  }
}
namespace sub4 {
  il void MAIN() {
    n %= (x + y) / gcd(x, y);
    if(!n) {write(s); return ;}
    --n; ll tmp = x;
    if(x < y) {
      while(n) {
        ll cnt = y % x;
        ll tot = (tmp - 1) / cnt + 1;
        ll num = y / x + 1;
        if(n >= num * tot) {
          n -= num * tot;
          tmp -= cnt * tot;
          if(n) {--n; tmp += x;}
          continue;
        }
//        cerr << "is this wrong?\n";
        ll p = n / num, q = n - num * p;
        tmp -= cnt * p; n = q;
        if(n) {--n; tmp -= y; tmp += n * x;}
//        for(re ll i = 0; i < n; ++i) {
//          if(s - tmp >= t) tmp += x;
//          else tmp -= y;
//        }
        n = 0;
      }
      write(s - tmp); return ;
    }
//    puts("ok");
    while(n) {
      ll cnt = ((x - 1) / y + 1) * y - x;
      ll tot = (tmp - 1) / cnt + 1;
      ll num = (x - 1) / y + 2;
      if(n >= num * tot) {
        n -= num * tot;
        tmp -= cnt * tot;
        if(n) {--n; tmp += x;}
        continue;
      }
//        cerr << "is this wrong?\n";
      ll p = n / num, q = n - num * p;
      tmp -= cnt * p; n = q;
      while(n) {
        ll r = (tmp - 1) / y + 1;
        if(n < r) {tmp -= n * y; break;}
        n -= r; tmp -= r * y;
        if(n) {--n; tmp += x;}
//        tmp -= n * y;
      }
//      cerr << n << " " <<x << " " << y << " " << tmp << " ";
//      for(re ll i = 0; i < n; ++i) {
//        if(s - tmp >= t) tmp += x;
//        else tmp -= y;
//      }
//      cerr << tmp << endl;
      n = 0;
    }
    write(s - tmp); return ;
//    vector<ll> p;
//    if(x > y) swap(x, y);
//    for(re int i = 0; i < n; ++i) {
//      if(i && s == t) {cerr << i << endl; break;}
//      if(s >= t) s -= x;
//      else p.eb(s), s += y;
//    }
//    for(re int i = 1; i < p.size(); ++i) printf("%lld ", p[i] - p[i - 1]);
//    printf("\n");
  }
}
il void WORK() {
  read(n); read(s); read(t); read(x); read(y);
//  n = rnd() % ((int)1e7) + 1e6;
//  x = rnd() % ((int)1e3) + 1;
//  y = rnd() % ((int)1e3) + 1;
//  x = y;
//  s = rnd() % ((int)1e5) + 1; t = rnd() % ((int)1e5) + 1;
//  printf("%lld %lld %lld %lld %lld\n", n, s, t, x, y);
  if(n <= 1000000) {sub1::MAIN(); return ;}
  if(s <= 100 && t <= 100 && x <= 100 && y <= 100) {sub2::MAIN(); return ;}
  if(x == y) {sub3::MAIN(); return ;}
  if(s == t) {sub4::MAIN(); return ;}
//  sub1::MAIN(); return ;
}
int main() {
  freopen("never.in", "r", stdin);
  freopen("never.out", "w", stdout);
  int TC; read(TC);
  for(re int i = 0; i < TC; ++i) WORK();
  return 0;
}