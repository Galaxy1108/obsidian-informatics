#include <cstdio>
#include <iostream>
#define macro_expand(x) #x
#define print_macro(x) printf("%s\n",macro_expand(x))
#define FOR(i,l,r) for(int i=(l),i##ADJK=(r);i<=i##ADJK;++i)
#define ROF(i,r,l) for(int i=(r),i##ADJK=(l);i>=i##ADJK;--i)
#define go(p,u) for(int p=head[u];p;p=edge[p].nxt)
using namespace std;
typedef long long LL;
const int MN=3e5+5,Mod=998244353;
int ml(int x,int y){return (LL)x*y%Mod;}
int ksm(int x,int y){
	int ret=1;
	for(;y;y>>=1,x=ml(x,x))if(y&1)ret=ml(ret,x);
	return ret;
}
int num,N,x,head[MN];
struct E{
	int v,nxt;
	E():v(0),nxt(0){}
	E(int _v,int _nxt):v(_v),nxt(_nxt){}
}edge[MN*2];
int tote;
void AddE(int u,int v){
	edge[++tote]=E(v,head[u]);
	head[u]=tote;
}
int dis[25][25];
void dfs(int r,int u,int ff){
	go(p,u){
		int v=edge[p].v;
		if(v!=ff){
			dis[r][v]=dis[r][u]+1;
			dfs(r,v,u);
		}
	}
}
int ans[MN];
int main(){
	freopen("youup.in","r",stdin);
	freopen("youup.out","w",stdout);
	scanf("%d%d%d",&num,&N,&x);
	if(num==1){
		printf("%d ",N);
		FOR(i,2,N)printf("%d ",0);
		printf("\n");
		return 0;
	}
	FOR(i,1,N-1){
		int x=0,y=0;scanf("%d%d",&x,&y);
		AddE(x,y),AddE(y,x);
	}
	if(num==2){
		FOR(i,1,N)dfs(i,i,0);
		FOR(s,0,(1<<N)-1){
			int cnt=0;
			FOR(i,1,N)if((s>>(i-1))&1)++cnt;
			bool can=1;
			FOR(i,1,N)FOR(j,i+1,N)if(((s>>(i-1))&1)&&((s>>(j-1))&1)&&dis[i][j]>x){can=0;break;}
			if(can)++ans[cnt];
		}
		FOR(i,1,N)printf("%d ",ans[i]);
		printf("\n");
	}else if(num==4){
		int now=1;
		FOR(i,0,N-1){
			now=ml(now,ml(N-i,ksm(i+1,Mod-2)));
			printf("%d ",now);
		}
		printf("\n");
	}
	fclose(stdin);
	fclose(stdout);
	return 0;
}