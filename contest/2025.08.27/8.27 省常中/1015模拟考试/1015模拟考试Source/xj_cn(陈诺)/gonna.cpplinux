//回家？我没有家可以回，我没有退路。
#include<bits/stdc++.h>
#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native")
using namespace std;
inline int read(){
   int s=0,w=1;
   char ch=getchar();
   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}
   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();
   return s*w;
}
#define ll long long
int n,p;
ll a[20003],b[20003];
vector<int> val[20003];
inline int d(int n,int k)
{
	while(val[n].size()<=k)
		val[n].push_back((1ll*val[n].back()*n+1)%p);
	return val[n][k];
}
int pr[10003],pc;
bool vis[30003];
const int N=30000;
signed main()
{
#ifndef local
	freopen("gonna.in","r",stdin),
	freopen("gonna.out","w",stdout);
#endif
	n=read(),p=read();
	for(int i=2; i<=N; ++i) if(!vis[i])
	{
		pr[++pc]=i;
		for(int j=2; i*j<=N; ++j) vis[i*j]=1;
	}
	for(int i=1; i<=20000; ++i) val[i].push_back(1);
	int ans=1,pos=0;
	for(int i=2; i<=n; ++i)
	{
		while(pr[pos+1]<=i) ++pos;
		int cur=1,w=i;
		for(int j=1; j<=pos; ++j)
			while(w%pr[j]==0) w/=pr[j],++b[j];
		for(int j=1; j<=pos; ++j)
			cur=1ll*cur*d(pr[j],1ll*b[j]*(i-1)-a[j])%p,
			a[j]+=(b[j]<<1);
		ans=(ans+cur)%p;
	}
	printf("%d\n",ans);
	return 0;
}