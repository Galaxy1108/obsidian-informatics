#include<bits/stdc++.h>
using namespace std;
const int N=20005;

namespace io{
	const int SIZE=(1<<21)+1;
	char ibuf[SIZE],*iS,*iT,obuf[SIZE],*oS=obuf,*oT=oS+SIZE-1,c,qu[55]; int qr;
	#define gc() (iS==iT?(iT=(iS=ibuf)+fread(ibuf,1,SIZE,stdin),(iS==iT?EOF:*iS++)):*iS++)
	inline void flush(){ fwrite(obuf,1,oS-obuf,stdout); oS=obuf; }
	inline void putc(char x){ *oS++=x; if(oS==oT) flush(); }
	template <class I>
	inline void read(I &x){
		for(c=gc();c<'0'||c>'9';c=gc());
		for(x=0;c<='9'&&c>='0';c=gc()) x=x*10+(c&15);
	}
	template <class I>
	inline void print(I x){
		if(!x) putc('0'); if(x<0) putc('-'),x=-x;
		while(x) qu[++qr]=x%10+'0',x/=10;
		while(qr) putc(qu[qr--]);
	}
}
using io::read; using io::putc; using io::print;

int n,mod;
int upr[N],lpf[N],pr[N],pcnt;
int c[N],inv[N];
int ans;

void init(){
	for(int i=2;i<=n;i++){
		if(!upr[i]){
			pr[++pcnt]=i;
			lpf[i]=i;
		}
		for(int j=1;j<=pcnt && i*pr[j]<=n;j++){
			upr[i*pr[j]]=1; lpf[i*pr[j]]=pr[j];
			if(i%pr[j]==0) break;
		}
	}
}

int qpow(int x,int y){
	int res=1;
	while(y){
		if(y&1) res=1ll*res*x%mod;
		x=1ll*x*x%mod;
		y>>=1;
	}
	return res;
}

int solve(int n){
	for(int i=0;i<=n;i++){
    	int j=min(i,n-i);
    	c[n-j+1]++;
    	c[1]--,c[j+1]++;
    }
    for(int i=2;i<=n;i++) c[i] += c[i-1];
    for(int i=2;i<=n;i++){
    	int tmp = c[i];
    	c[i] = 0;
    	int j=i;
    	while(j>1){
    		int x=lpf[j];
    		int cc=0;
    		while(j%x==0) cc++,j/=x;
    		c[x] += cc * tmp;
    	}
    }
    int ret = 1;
    for(int i=2;i<=n;i++){
    	if(c[i]==0) continue;
    	int x = (qpow(i,c[i]+1) - 1 + mod) % mod;
    	x = 1ll * x * inv[i-1] % mod;
    	ret = 1ll * ret * x % mod;
    	c[i]=0;
    }
    c[1]=0; c[n+1]=0;
    return ret;
}

main(){
	freopen("gonna.in","r",stdin); freopen("gonna.out","w",stdout);
    read(n); read(mod);
    init();
    for(int i=1;i<=n;i++) inv[i] = qpow(i,mod-2);
    for(int i=1;i<=n;i++)
    	( ans += solve(i) ) %= mod;
    print(ans);
	io::flush();
}