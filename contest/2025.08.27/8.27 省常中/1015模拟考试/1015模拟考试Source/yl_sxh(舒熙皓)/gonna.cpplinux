#include<bits/stdc++.h>
#define ll long long
#define For(i,a,b) for(int i=(a);i<=(b);++i)
#define Rof(i,a,b) for(int i=(a);i>=(b);--i)
using namespace std;
const int Maxn=2e4,Maxk=2300,Maxm=480;

inline int read()
{
    int x=0,f=1;
    char ch=getchar();
    while(ch<'0' || ch>'9')
    {
        if(ch=='-') f=-1;
        ch=getchar();
    }
    while(ch>='0' && ch<='9')
    {
        x=x*10+ch-'0';
        ch=getchar();
    }
    return x*f;
}

int n,Mod,vis[Maxn+5],idx[Maxn+5];
int prm[Maxn+5],tot;
int Pow[2][Maxm+5],num[2][Maxm+5],all[Maxn+5];
int fac[Maxn+5],sum[Maxn+5];

inline void Prime()
{
    For(i,2,n)
    {
        if(!vis[i]) prm[++tot]=i,idx[i]=tot;
        for(int j=1;j<=tot && i*prm[j]<=n;++j)
        {
            vis[i*prm[j]]=1;
            if(i%prm[j]==0) break;
        }
    }
}
inline void Build(int id)
{
    int x=prm[id],pm=1; Pow[0][0]=num[0][0]=1;
    For(i,1,Maxm) Pow[0][i]=1ll*Pow[0][i-1]*x%Mod;
    For(i,1,Maxm) num[0][i]=(num[0][i-1]+Pow[0][i])%Mod;
    Pow[1][0]=num[1][0]=1,x=Pow[0][Maxm];
    For(i,1,Maxm)
    {
        Pow[1][i]=1ll*Pow[1][i-1]*x%Mod;
        num[1][i]=(1ll*num[1][i-1]*x%Mod+num[0][Maxm-1])%Mod;
    }
}
inline int Power(int y)
{
    int s1=num[1][y/Maxm],s2;
    if(y%Maxm==0) return s1;
    else
    {
        s2=(1ll*s1*Pow[0][y%Maxm]%Mod+num[0][y%Maxm-1])%Mod;
        return s2;
    }
}

int main()
{
    freopen("gonna.in","r",stdin);
    freopen("gonna.out","w",stdout);

    n=read(),Mod=read(); Prime();
    For(i,1,n) all[i]=1;
    For(j,1,tot)
    {
        For(i,1,n)
        {
            int now=i;
            fac[i]=fac[i-1];
            while(now%prm[j]==0) now/=prm[j],fac[i]++;
        }
        For(i,1,n) sum[i]=sum[i-1]+fac[i];
        Build(j);
        For(i,1,n)
        {
            ll cnt=1ll*fac[i]*(i+1)-sum[i]*2ll;
            all[i]=1ll*all[i]*Power(cnt)%Mod;
        }
    }
    int ans=0;
    For(i,1,n) ans=(ans+all[i])%Mod;
    printf("%d\n",ans);
    return 0;
}