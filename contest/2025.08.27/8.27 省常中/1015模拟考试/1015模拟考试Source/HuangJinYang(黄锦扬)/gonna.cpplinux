#include<bits/stdc++.h>
using namespace std;
#define ll long long
const int MX=2e4;
int n,mod,tot,p;
bool isp[MX+7];
int pri[MX+7],num[MX+7];
ll pw[MX+7],lst[MX+7];
ll phi(ll x){
	ll ret=x;
	for(int i=2;i*i<=x;i++){
		if(x%i==0){
			ret=ret/i*(i-1);
			while(x%i==0)x/=i;
		}
	}
	if(x!=1)ret=ret/x*(x-1);
	return ret;
}
ll ksm(ll a,ll b,ll MOD){
	ll ret=1;
	while(b){
		if(b&1)ret=ret*a%MOD;
		a=a*a%MOD;
		b>>=1;
	}
	return ret;
}
ll inv(ll x,ll MOD){return ksm(x,MOD-2,MOD);}
ll solve(int x){
	memset(pw,0,sizeof(pw));
	memset(lst,0,sizeof(lst));
	for(int i=1;i<x;i++){
		if(i!=1)
			for(int j=1;j<=tot;j++)pw[j]=(pw[j]+lst[j])%p;
		int tmp=x-i+1;
		//cout<<"pos "<<tmp<<endl;
		for(int j=2;j*j<=tmp;j++){
			int cnt=0;
			while(tmp%j==0){
				//cout<<"f"<<endl;
				cnt++;
				tmp/=j;
			}
			if(cnt)pw[num[j]]=(pw[num[j]]+cnt)%p,lst[num[j]]=(lst[num[j]]+cnt)%p;
		}
		if(tmp!=1)pw[num[tmp]]=(pw[num[tmp]]+1)%p,lst[num[tmp]]=(lst[num[tmp]]+1)%p;
		
		tmp=i;
		//cout<<"neg "<<tmp<<endl;
		for(int j=2;j*j<=tmp;j++){
			//cout<<"f"<<endl;
			int cnt=0;
			while(tmp%j==0){
				//cout<<"f"<<endl;
				cnt++;
				tmp/=j;
			}
			if(cnt)pw[num[j]]=(pw[num[j]]-cnt)%p,lst[num[j]]=(lst[num[j]]-cnt)%p;
		}
		if(tmp!=1)pw[num[tmp]]=(pw[num[tmp]]-1)%p,lst[num[tmp]]=(lst[num[tmp]]-1)%p;
	}
	/*
	cout<<"PW:"<<endl;
	for(int i=1;i<=tot;i++){
		if(pw[i]!=0){
			cout<<pri[i]<<' '<<pw[i]<<endl;
		}
	}
	*/
	ll ret=1;
	for(int i=1;i<=tot;i++){
		ll s=pri[i],k=pw[i]%p;
		if(k==0)continue;
		ret=ret*((ksm(s,k+1,mod)-1+mod)%mod*inv(s-1,mod)%mod)%mod;
		//cout<<s<<" "<<k<<" "<<((ksm(s,k+1,mod)-1+mod)%mod*inv(s-1,mod)%mod)%mod<<endl;
	}
	return ret;
}
int main(){
	freopen("gonna.in","r",stdin);
	freopen("gonna.out","w",stdout);
	memset(isp,true,sizeof(isp));
	isp[0]=isp[1]=false;
	for(int i=2;i<=MX;i++){
		if(isp[i]){
			pri[++tot]=i;
			num[i]=tot;
			for(int j=2;j*i<=MX;j++)isp[i*j]=false;
		}
	}
	cin>>n>>mod;
	ll ans=0;
	p=phi(mod);
	for(int i=1;i<=n;i++){
		int k=solve(i);
		ans=(ans+k)%mod;
		//cout<<"G("<<i<<") = "<<k<<endl;
	}
	cout<<ans<<endl;
	return 0;
}