#include<bits/stdc++.h>
using namespace std;
#define ll int
#define f(i,a,b) for(ll i=a;i<=b;i++)
#define wt int tt=d;while(tt--)
#define py puts("Yes")
#define pn puts("No")
#define fe(i,e) for(int i=0;i<e.size();i++)
#define vi vector<ll>
inline ll rd() {
	ll x=0,f=1;
	char c=getchar();
	while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}
	while(isdigit(c))x=x*10+c-'0',c=getchar();
	return x*f;
}
#define d rd()
#define pb push_back
const ll N=300010;
struct edge{ll v,w,nx;}e[N<<1];
ll hd[N],cnt;
void add(ll u,ll v,ll w){e[++cnt]=(edge){v,w,hd[u]};hd[u]=cnt;}
ll qp(ll a,ll b,ll p){
	ll ans=1;while(b){
		if(b&1)ans=ans*a%p;
		a=a*a%p;b>>=1;
	}return ans;
}ll n,s,m;
struct node{bool a[5010];};
node operator *(node a,node b){
	node c;
	f(i,0,s){c.a[i]=false;
		f(j,0,i)c.a[i]^=(a.a[j]&b.a[i-j]);
	}return c;
}node qp(node a,ll b){
	node ans;f(i,1,s)ans.a[i]=false;
	ans.a[0]=true;
	while(b){
		if(b&1)ans=ans*a;
		a=a*a;b>>=1;
	}return ans;
}node a;
int main(){
	freopen("give.in","r",stdin);
	freopen("give.out","w",stdout);
	wt{
		m=d,s=d,n=d;
		f(i,1,n)a.a[d]=true;
		a=qp(a,m);
		printf("%d\n",a.a[s]);
		f(i,0,s)a.a[i]=false;
	}
	return 0;
}
/*

1
5 10 3
1 2 3

1

5
5 10 5
1 2 3 4 5
10 30 5
1 2 3 4 5
49 1000 10
2 3 5 7 9 11 13 17 19 23
50 1000 10
2 3 5 7 9 11 13 17 19 23
500 2000 6
1 2 5 233 666 999

1
1
0
0
0

10
2000 5000 200
2000 5000 200
2000 5000 200
2000 5000 200
2000 5000 200
2000 5000 200
2000 5000 200
2000 5000 200
2000 5000 200
2000 5000 200
*/