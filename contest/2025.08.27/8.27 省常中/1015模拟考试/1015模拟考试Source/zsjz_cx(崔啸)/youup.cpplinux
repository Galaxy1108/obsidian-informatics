#include<cstdio>
#include<algorithm>
using namespace std;
#define mo 998244353
const int N=3e5+5;
int n,m,Si,mi,rt,s[N],s1[N],si[N],f[N],g[N],bz[N],fac[N],inv[N];
#include<vector>
vector<int> to[N];
void rfs(int x,int ff)
{
	si[x]=1;
	int ma=0;
	for(auto y:to[x])
		if(y!=ff&&!bz[y])
		{
			rfs(y,x);
			si[x]+=si[y];
			ma=max(ma,si[y]);
		}
	ma=max(ma,Si-si[x]);
	if(ma<mi)mi=ma,rt=x;
}
void pfs(int x,int ff,int d)
{
	if(d>m)return;
	s1[d]++;
	for(auto y:to[x])
		if(y!=ff&&!bz[y])pfs(y,x,d+1);
}
void dfs(int x)
{
	for(auto y:to[x])
		if(!bz[y])
		{
			pfs(y,x,1);
			for(int j=1;j<=m;j++)s1[j]+=s1[j-1];
			for(int j=1;j<=m;j++)
				if(s1[j]==s1[j-1])break;
				else f[s1[j]+s[m-j]]++;
			for(int j=1;j<=m;j++)
				if(!s[j])s[j]+=s1[j];
				else s[j]+=s1[min(j,m-j)];
			for(int j=1;j<=m;j++)s1[j]=0;
		}
	for(int i=1;i<=m;i++)s[i]=0;
	bz[x]=1;
	int res=Si;
	for(auto y:to[x])
		if(!bz[y])
		{
			Si=mi=si[x]>si[y]?si[y]:res-si[y];
			rfs(rt=y,0);
			dfs(rt);
		}
}
int fpow(int x,int y)
{
	int res=1;
	for(;y;y>>=1,x=1ll*x*x%mo)if(y&1)res=1ll*res*x%mo;
	return res;
}
int main()
{
	freopen("youup.in","r",stdin);
	freopen("youup.out","w",stdout);
	scanf("%d",&n);
	scanf("%d%d",&n,&m);
	for(int x,y,i=1;i<n;i++)
	{
		scanf("%d%d",&x,&y);
		to[x].push_back(y);
		to[y].push_back(x);
	}
	Si=mi=n;
	rfs(rt=1,0);
	dfs(rt);
	fac[0]=1;for(int i=1;i<=n;i++)fac[i]=1ll*fac[i-1]*i%mo;
	inv[n]=fpow(fac[n],mo-2);for(int i=n;i>=1;i--)inv[i-1]=1ll*inv[i]*i%mo;
	for(int i=1;i<n;i++)
		for(int j=i;j<n;j++)
			g[i]=(g[i]+1ll*f[j]*fac[j]%mo*inv[i]%mo*inv[j-i]%mo)%mo;
	printf("%d ",n);
	for(int i=1;i<n;i++)printf("%d ",g[i]);
	return 0;
}