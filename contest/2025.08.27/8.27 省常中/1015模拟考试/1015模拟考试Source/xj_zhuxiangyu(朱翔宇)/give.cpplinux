// #pragma GCC optimize("O3")
// #pragma GCC optimize("Ofast")
// #pragma GCC optimize("unroll-loops")
// #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native")
#include <bits/stdc++.h>
using namespace std;

#define PB emplace_back
#define int long long
#define ll long long
#define vi vector<int>
#define siz(a) ((int)((a).size()))
#define rep(i, a, b) for (int i = (a); i <= (b); ++i)
#define per(i, a, b) for (int i = (a); i >= (b); --i)

int a, b, c, T, s[205];
bool vis[64];
vi st;

namespace sub1 {
	bitset<5005> f;
	void ANS() {
		f.reset();
		f[0] = 1;
		rep(i, 0, 63) {
			if(!vis[i]) continue;
			auto g = f;
			g.reset();
			rep(j, 1, c) g ^= f << ((1ll << i) * s[j]);
			f = g;
		}
		cout << f[b] << '\n';
	}
}

signed main() {
	freopen("give.in", "r", stdin);
	freopen("give.out", "w", stdout);
	ios::sync_with_stdio(0);
	cin.tie(0), cout.tie(0);
	for(cin >> T; T--; ) {
		st.clear();
		memset(vis, 0, sizeof(vis));
		cin >> a >> b >> c;
		rep(i, 1, c) cin >> s[i];
		for(int i = 0; a; a >>= 1, ++i) {
			if(!(a & 1)) continue;
			vis[i] = 1;
			rep(j, 1, c) if(s[j] * (1ll << i) <= b) st.PB(s[j] * (1ll << i));
		}
		if(b <= 5e3) sub1::ANS();
	}
	return 0;
}