#include<iostream>
#include<cstdio>
#include<cmath>
#include<algorithm>
#define R register
using namespace std;
const int N=10005;
int n,cnt;
long long p,prime[N],q[N][3005],q2[N][3005];
bool bj[N];
void xxs()
{
	for (int i=2;i<=n;++i)
	{
		if (!bj[i])
		{
			prime[++cnt]=i;	
		}	
		for (int j=1;j<=cnt&&prime[j]*i<=n;++j)
		{
			bj[prime[j]*i]=true;
			if (i%prime[j]==0) break;
		}
	}	
}
long long ksm(long long ds,long long zs)
{
	long long c=1;
	while (zs>1)
	{
		if (zs&1) c=c*ds%p;
		ds=ds*ds%p;zs>>=1;
	}
	return c*ds%p;
}
int main()
{
	freopen("gonna.in","r",stdin);freopen("gonna.out","w",stdout);
	scanf("%d%lld",&n,&p);
	xxs();
	for (int i=2;i<=n;++i)
	{
		int x=i;
		for (int j=1;j<=cnt;++j)
		{
			q[i][j]=q[i-1][j];
			while (x%prime[j]==0) q[i][j]++,x/=prime[j];
		}
	}
	for (int i=2;i<=n;++i)
		for (int j=1;j<=cnt;++j)
			q2[i][j]=q2[i-1][j]+q[i][j];
	long long ans=1;
	for (int i=2;i<=n;++i)
	{
		long long sum=1;
		for (int j=1;j<=cnt;++j) 
		{
			long long s=((long long)(i+1)*q[i][j]-2ll*q2[i][j])%p;
			sum=(sum*(ksm(prime[j],s+1)-1ll)%p*ksm(prime[j]-1,p-2)%p)%p;
		}
		ans=(ans+sum)%p;
	}
	printf("%lld",ans);
	return 0;
}
