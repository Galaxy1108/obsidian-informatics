#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int mod=998244353;
int f[2][1<<20],g[1<<20];
ll l[45],r[45];
int n,m,flag=0;
int subtask1_flag=1,subtask2_flag=1;
int ksm(int x,int y){
    int res=1;
    while (y){
        if (y&1) res=1ll*res*x%mod;
        x=1ll*x*x%mod;
        y>>=1;
    }
    return res;
}
// ll lowbit(ll x){return x&-x;}
// int cbit(ll x){
//     for (int i=0;i<m;++i) if (x==(1ll<<i)-1) return i;
// }
int main(){
    freopen("far.in","r",stdin);
    freopen("far.out","w",stdout);
    scanf("%d%d",&n,&m);
    for (int i=1;i<=n;++i) scanf("%lld%lld",&l[i],&r[i]),subtask1_flag&=(l[i]==0 && r[i]==(1ll<<m)-1);//,subtask2_flag&=(l[i]==0 && lowbit(r[i]+1)==r[i]+1);
    if (subtask1_flag){
        int cur=(1ll<<(m+1)/2)%mod,step=(1ll<<m)%mod;
        for (int i=0;i<n;++i,cur=1ll*cur*step%mod)
            printf("%d\n",cur);
        return 0;
    }
    // if (subtask2_flag){
    //     int cur=(1ll<<(cbit(r[1])+1)/2)%mod;
    //     for (int i=1;i<=n;++i,cur=1ll*cur*(r[i+1]+1)%mod)
    //         printf("%d\n",cur);
    //     return 0;
    // }
    if (m&1) ++m,flag=1;
    f[0][0]=1;
    for (int i=1;i<=n;++i){
        for (int s=0;s<(1<<m/2);++s) g[s]=f[i&1][s]=0;
        for (ll x=l[i];x<=r[i];++x){
            int ts=0;
            if (!flag){
                for (int i=0;i<m/2;++i) ts|=((((x&(1<<i))?1:0)^((x&(1<<m-1-i))?1:0))<<i);
            }
            else{
                for (int i=0;i<m/2-1;++i) ts|=((((x&(1<<i))?1:0)^((x&(1<<m-2-i))?1:0))<<i);
                ts|=(((x>>m/2-1)&1)<<(m/2-1));
            }
            ++g[ts];
        }
        for (int s=0;s<(1<<m/2);++s)
            for (int t=0;t<(1<<m/2);++t)
                f[i&1][s^t]=1ll*(1ll*f[i&1][s^t]+1ll*f[(i&1)^1][s]*g[t]%mod)%mod;
        int ans=f[i&1][0];
        if (flag) ans=(1ll*ans+1ll*f[i&1][1<<m/2-1])%mod;
        printf("%d\n",ans);
    }
    return 0;
}