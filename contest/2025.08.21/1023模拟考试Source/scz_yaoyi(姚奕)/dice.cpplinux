// Author: kyEEcccccc

#include <bits/stdc++.h>

using namespace std;

using LL = long long;
using ULL = unsigned long long;

const int P = 1000000007;
const int N = 5005;

LL kpow(LL x, LL y)
{
    x %= P;
    LL res = 1;
    while (y)
    {
        if (y & 1) res = res * x % P;
        x = x * x % P;
        y >>= 1;
    }
    return res;
}

int exgcd(int a, int b, LL &x, LL &y)
{
    if (b == 0)
    {
        x = 1;
        y = 0;
        return a;
    }
    int g = exgcd(b, a%b, x, y);
    LL nx = y, ny = x - (a/b) * y;
    x = nx; y = ny;
    return g;
}

LL inv(LL x)
{
    x %= P;
    LL r, k;
    int g = exgcd(x, P, r, k);
    if (g == 1) return (r % P + P) % P;
    cerr << "ERR: inv\n";
    exit(1);
}

LL a[505], f[505][505];

int main(void)
{
    freopen("dice.in", "r", stdin);
    freopen("dice.out", "w", stdout);
    std::ios::sync_with_stdio(0);
    cin.tie(nullptr);

    int n;
    cin >> n;
    for (int i = 1; i <= n; ++i)
        cin >> a[i];
    sort(a+1, a+n+1);
    for (int j = 1; j <= a[1]; ++j)
        f[1][j] = inv(a[1]);
    for (int i = 2; i <= n; ++i)
        for (int j = 1; j <= a[i]; ++j)
        {
            f[i][j] = f[i-1][j] * j % P;
            for (int k = 1; k < j; ++k)
                f[i][j] = (f[i][j] + f[i-1][k]) % P;
            f[i][j] = f[i][j] * inv(a[i]) % P;
        }
    LL ex = 0;
    for (int j = 1; j <= a[n]; ++j)
        ex += j * f[n][j] % P;
    cout << ex % P << '\n';

    return 0;
}