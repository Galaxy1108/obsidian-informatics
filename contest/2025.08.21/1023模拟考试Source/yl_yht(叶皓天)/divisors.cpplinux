/*
Criteria:
1.read the problem carefully; WRITE DOWN SPECIAL CONSTRAINTS when the problem is long;
2.consider special situations/constraints to get observations;
3.think of everything throughout before coding;
4.return to the initial list of notifications after coding.
*/
#include <bits/stdc++.h>
namespace IO {
	#define iL (1 << 20)
	char ibuf[iL], *iS = ibuf + iL, *iT = ibuf + iL;
	#define gc() ((iS == iT) ? (iT = (iS = ibuf) + fread(ibuf, 1, iL, stdin), iS == iT ? EOF : *iS ++) : *iS ++)
	template<class T> inline void read(T &x) {
		x = 0;int f = 0;char ch = gc();
		for (; !isdigit(ch); f |= ch == '-', ch = gc());
		for (; isdigit(ch); x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc());
		x = (f == 1 ? ~ x + 1 : x);
	}
	char Out[iL], *iter = Out;
	#define flush() fwrite(Out, 1, iter - Out, stdout), iter = Out
	template<class T> inline void write(T x, char ch = '\n') {
		T l, c[35];
		if (x < 0) *iter ++ = '-', x = ~ x + 1;
		for (l = 0; !l || x; c[l] = x % 10, l++, x /= 10);
		for (; l; -- l, *iter ++ = c[l] + '0');*iter ++ = ch;
		flush();
	}
}
using namespace IO;
#define N 2505
#define ll long long
#define DEBUG
#define pii pair<int, int>
#define mp make_pair
#define fi first
#define se second
using namespace std;
ll n, a[N], b[N];
namespace sub1 {
	int cnt;
	void work(int x, ll dep) {
		if (x == 0) return ;
		int all = (x + 1) / 2;
		for (int i = 1, j = 1, k = all * 2 - 1; i <= all; i++) {
			b[++ cnt] = dep;
			if (i & 1) a[cnt] = j, j += 2;
			else a[cnt] = k, k -= 2;
		}
		work(x / 2, dep * 2ll);
	}
	void main() {
		work(n, 1); //a[++ cnt] = 1; b[cnt] = 1;
		// for (int i = 2; i <= n; i++) write(a[i]);
		for (int i = 1; i < n; i++) write(a[i] * a[i + 1] * b[i + 1], ' ');
		write(a[n] * b[n]);
		for (int i = 1; i < n; i++) write(i, ' '), write(i + 1);
	}
}
int main() {
// #ifndef ONLINE_JUDGE
// 	freopen("test.in", "r", stdin);
// 	freopen("test.out", "w", stdout);
// #endif
	freopen("divisors.in", "r", stdin);
	freopen("divisors.out", "w", stdout);
	read(n);
	if (n <= 100) { sub1::main(); return 0; }
	sub1::main();
	return 0;
}