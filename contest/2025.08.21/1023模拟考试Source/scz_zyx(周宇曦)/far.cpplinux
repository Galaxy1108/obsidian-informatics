#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
template <typename T> inline void read(T &FF) {
    int RR = 1; FF = 0; char CH = getchar();
    for(; !isdigit(CH); CH = getchar()) if(CH == '-') RR = -RR;
    for(; isdigit(CH); CH = getchar()) FF = FF * 10 + CH - 48;
    FF *= RR;
}
inline void file(string str) {
    freopen((str + ".in").c_str(), "r", stdin);
    freopen((str + ".out").c_str(), "w", stdout);
}
const LL mod = 998244353;

LL Qpow(LL x, LL k) {
    if(k <= 1) return k ? x : 1;
    LL h = Qpow(x, k / 2); h = h * h % mod;
    return k & 1 ? h * x % mod : h;
}

const LL Iv = Qpow(2, mod - 2);
const int N = (1 << 20);
int n;
inline void XOR(LL *a, const LL f) {
    for(int i = 1; i * 2 <= n; i <<= 1)
        for(int j = 0; j < n; j += i * 2)
            for(int k = j; k < j + i; k++) {
                LL &x = a[k], &y = a[k + i];
                x += y; if(x >= mod) x -= mod;
                y = x + 2 * (mod - y);
                if(y >= mod) {
                    y -= mod;
                    if(y >= mod) y -= mod;
                }
                if(f) (a[k] *= f) %= mod, (a[k + i] *= f) %= mod;
            }
                
}
inline void MR(LL *c, LL *a, LL *b) {
    for(int i = 0; i < n; i++)
        c[i] = a[i] * b[i] % mod;
}
LL mul(LL *pa, LL *pb, LL *pc) {
    XOR(pa, 0), XOR(pb, 0), MR(pc, pa, pb), XOR(pc, Iv);
}
LL tmp[N], f[N], cnt, m;

bool check(int x) {
    for(int i = 0; i < m / 2; i++)
        if((x >> i & 1) ^ (x >> (m - i - 1) & 1)) return false;
    return true;
}

int main() {
    file("far");
    read(cnt), read(m); n = (1 << m);
    if(cnt > 20 || m > 20) {
        LL p = Qpow(2, (m + 1) / 2), q = Qpow(2, m);
        LL t = 1;
        for(int i = 1; i <= cnt; i++) {
            cout << t * p % mod << '\n';
            t = t * q % mod;
        }
        return 0;
    }
    f[0] = 1;
    for(int i = 1; i <= cnt; i++) {
        int l, r; read(l), read(r);
        memset(tmp, 0, sizeof(tmp));
        for(int i = l; i <= r; i++) tmp[i] = 1;
        mul(f, tmp, f);
        LL ans = 0;
        for(int j = 0; j < n; j++)
            if(check(j)) ans += f[j];
        cout << ans % mod << '\n';
    }
    return 0;
}