#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
using namespace std;
namespace IO {
	const int MAXSIZE = 1 << 20;
	char buf[MAXSIZE], *p1, *p2;
	#define gc() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, MAXSIZE, stdin), p1 == p2) ? EOF : *p1++)
	inline int rd() {
		int an(0), ch(gc());
		for (; !isdigit(ch) ; ch = gc());
		for (; isdigit(ch) ; ch = gc())
			an = (an << 3) + (an << 1) + (ch ^ 48);
		return an;
	}
}
using namespace IO;

struct node {
	int pl, v;
}a[55];
int n, ans;
inline bool cmp(node xx, node yy) {
	return xx.v < yy.v || (xx.v == yy.v && xx.pl < yy.pl);
}
int main() {
	freopen("lineup.in", "r", stdin);
	freopen("lineup.out", "w", stdout);
	n = rd();
	for (int i(1) ; i <= n ; ++i) {
		a[i].pl = i;
		a[i].v = rd();
	}
	sort(a + 1, a + n + 1, cmp);
	for (int i(1) ; i <= n ; ++i)
		ans += abs(i - a[i].pl);
	printf("%d\n", ans);
	fclose(stdin);fclose(stdout);
	return 0;
}
