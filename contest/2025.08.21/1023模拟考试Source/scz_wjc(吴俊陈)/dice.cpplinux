#include<bits/stdc++.h>
using namespace std;
#define ll long long
const int h=5010;
ll mod=1e9+7;
ll l1,l2;
void exgcd(ll x,ll y){
	//cout<<1<<endl;
	if(y==0){
		l1=1,l2=0;
		return;
	}
	exgcd(y,x%y);
	ll now_1=l1;
	l1=l2;
	l2=now_1-(x/y)*l2;
}
ll get_inv(ll x){
	exgcd(x,mod);
	return l1;
}
ll qp(ll x,ll mi){
	ll ans=1,base=x;
	while(mi){
		//cout<<2<<endl;
		if(mi&1)
			ans=(ans%mod)*(base%mod)%mod;
		base=(base%mod)*(base%mod)%mod;
		mi>>=1;
	}
	return ans;
}
int n;
ll a[h];
ll d[h];
ll m=1;
ll mx=0;
ll sum[h];
ll mul=1;
ll dp[h];
int main(){
	freopen("dice.in","r",stdin);
	freopen("dice.out","w",stdout);
	ll up=0,down=1;
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		scanf("%lld",&a[i]),down*=a[i],down%=mod,d[1]++,d[a[i]+1]--,mx=max(mx,a[i]);
	for(int i=1;i<=mx;i++)
		sum[i]=sum[i-1]+d[i];
		ll pre=0;
	for(ll i=1;i<=mx;i++){
		if(sum[i-1]>sum[i])
			mul*=qp(i-1,sum[i-1]-sum[i]);
		dp[i]=qp(i,sum[i])*(mul%mod)%mod;
		dp[i]-=pre;
		dp[i]=(dp[i]%mod+mod)%mod;
		pre+=dp[i]%mod;
		pre%=mod;
	}
	for(int i=1;i<=mx;i++)
		up+=(i%mod)*(dp[i]%mod)%mod,up%=mod;
	ll ans=(up%mod)*(get_inv(down)%mod)%mod;
	cout<<ans<<endl;
	/*
	sort(a+1,a+1+n);
	ll d_cnt=1;
	for(int i=n;i>=1;i--){
		for(int j=a[i];j>a[i-1];j--)
			d[j]=d_cnt;
		d_cnt++;
	}
	ll up=0;
	for(int i=a[n];i>=1;i--){
		for(int j=1;j<=d[a[n]];j++)
			up+=qp(a[n]-1,d[a[n]-1])
	}	
	*/	
    return 0;
}

