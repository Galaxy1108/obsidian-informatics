#include<bits/stdc++.h>
using namespace std;
#define ll long long
ll n,a[505],mx[505],f[505][10005];
int prime[5000005],cnt,vis[5000005];
const ll p=1e9+7;
void primes(){
	vis[1]=1;
	for(int i=2;i<=5000000;i++){
		if(!vis[i]){
			prime[++cnt]=i;
			for(int j=i*2;j<=5000000;j+=i)vis[j]=1;
		}
	}
}
int sub1[5000005],sub2[5000005];
void add1(int x,int k){
	sub1[x]+=k;
}
void add2(int x,int k){
	sub2[x]+=k;
}
ll qpow(ll a,ll b){
	ll ans=1;a%=p;
	for(;b;b>>=1){
		if(b&1)ans=ans*a%p;
		a=a*a%p;
	}
	return ans;
}
ll inv(ll x){
	return qpow(x,p-2);
}
int main() {
	freopen("dice.in","r",stdin);
	freopen("dice.out","w",stdout);
	cin>>n;
	primes();
	for(int i=1;i<=n;i++){
		cin>>a[i],mx[i]=max(mx[i-1],a[i]);
		int tmp=a[i]; 
		for(int j=1;j<=cnt&&prime[j]<=tmp;++j){
			while(tmp%prime[j]==0){
				add1(prime[j],1);tmp/=prime[j];
			}
		}
		if(tmp>1)add1(tmp,1);
	}
	sort(a+1,a+n+1);
	for(int i=1;i<=a[1];i++)f[1][i]=1;
	for(int i=2;i<=n;++i) {
		for(long long j=1;j<=mx[i];++j) {
			for(int k=1;k<=min(j,mx[i-1]);++k) {
				if(j==k)f[i][j]+=f[i-1][k]*k;
				else f[i][j]+=f[i-1][k];	
			}
		}
	}
	ll ans=0;
	for(int i=1;i<=mx[n];i++)ans+=f[n][i]*i%p;
	ll ans2=1;
//	return 0;
	for(int i=1;i<=cnt;i++){
		if(sub1[prime[i]]){
//			cout<<prime[i]<<' '<<sub1[prime[i]]<<endl;
			ans2=ans2*qpow(prime[i],sub1[prime[i]])%p;
		}
	}
//	cout<<ans<<' '<<ans2<<endl;
	cout<<ans*inv(ans2)%p<<'\n';
	return 0;
}