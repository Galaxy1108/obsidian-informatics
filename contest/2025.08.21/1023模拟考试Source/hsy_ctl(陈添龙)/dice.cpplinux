#include<bits/stdc++.h>
#define pc putchar
#define int long long
using namespace std;
inline int read()
{
	int x=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){f=ch=='-'?-1:f;ch=getchar();}
	while(ch>='0'&&ch<='9'){x=x*10+(ch^48);ch=getchar();}
	return x*f;
}
void write(int x)
{
	if(x<0){x=-x;pc('-');}
	if(x>9)write(x/10);
	pc(x%10+48);
}
const int mod=1e9+7;
int n,m,ans,a[5005];
struct node
{
	int x,c;
}b[5005];
int fac[5005],ifac[5005],pre[5005],suf[5005];
inline int qpow(int x,int y=mod-2)
{
	int res=1;
	while(y)
	{
		if(y&1)res=res*x%mod;
		x=x*x%mod;y>>=1;
	}return res;
}

inline int LGRG(int x,int y)
{
	if(x<=0)return 0; pre[0]=suf[y+3]=1;int res=0;
	for(int i=1;i<=y+2;++i)pre[i]=pre[i-1]*(x-i+mod)%mod;
	for(int i=y+2;i>=1;--i)suf[i]=suf[i+1]*(x-i+mod)%mod;
	for(int i=1,sum=0;i<=y+2;++i)
	{
		int tmp=ifac[i-1]*ifac[y+2-i]%mod;tmp=(y-i)&1?mod-tmp:tmp;
		tmp=tmp*pre[i-1]%mod*suf[i+1]%mod;
		sum=(sum+qpow(i,y))%mod;res=(res+sum*tmp%mod)%mod;
	}return res;
}

signed main()
{
	freopen("dice.in","r",stdin);
	freopen("dice.out","w",stdout);
	n=read();fac[0]=1;
	for(int i=1;i<=n;++i)a[i]=read();
	for(int i=1;i<=n+2;++i)fac[i]=fac[i-1]*i%mod;
	ifac[n+2]=qpow(fac[n+2]);
	for(int i=n+1;i>=0;--i)ifac[i]=ifac[i+1]*(i+1)%mod;
	sort(a+1,a+n+1,greater<int>());
	for(int i=1;i<=n;++i)
	{
		if(a[i]==a[i-1])b[m].c++;
		else b[++m].x=a[i],b[m].c=1;
	}
	for(int i=1,mul=1,cnt=0;i<=m;++i)
	{
		mul=mul*qpow(qpow(b[i].x),b[i].c)%mod;cnt+=b[i].c;int sum=0;
		sum+=qpow(b[i].x,cnt+1)-qpow(b[i+1].x,cnt+1);
		sum-=LGRG(b[i].x-1,cnt)-LGRG(b[i+1].x-1,cnt);
		ans=(ans+sum*mul%mod)%mod;
	}write((ans+mod)%mod),pc('\n');
	return 0;
}