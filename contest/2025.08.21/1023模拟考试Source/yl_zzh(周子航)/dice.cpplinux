#include<bits/stdc++.h>
#define int long long
using namespace std;
namespace IO{
    template<typename T>
    inline void read(T &x){
        x=0;
        int f=1;
        char ch=getchar();
        while(ch>'9'||ch<'0'){
            if(ch=='-'){
                f=-1;
            }
            ch=getchar();
        }
        while(ch>='0'&&ch<='9'){
            x=x*10+(ch-'0');
            ch=getchar();
        }
        x=f==1?x:-x;
    }
    template<typename T>
    inline void write(T x){
        if(x<0){
            putchar('-');
            x=-x;
        }
        if(x>=10){
            write(x/10);
        }
        putchar(x%10+'0');
    }
    template<typename T>
    inline void write_endl(T x){
        write(x);
        putchar('\n');
    }
    template<typename T>
    inline void write_space(T x){
        write(x);
        putchar(' ');
    }
}
using namespace IO;
const int mod=1e9+7;
int n,a[10000],s[10000];
int qpow(int a,int b){
    int res=1;
    while(b){
        if(b&1){
            res=res*a%mod;
        }
        a=a*a%mod;
        b>>=1;
    }
    return res;
}
signed main(){
    freopen("dice.in","r",stdin);
    freopen("dice.out","w",stdout);
    read(n);
    s[0]=1;
    for(int i=1;i<=n;i++){
        read(a[i]);
    }
    sort(a+1,a+n+1);
    for(int i=1;i<=n;i++){
        s[i]=s[i-1]*a[i]%mod;
    }
    int inv=qpow(s[n],mod-2);
    int ans=0,tot=1;
    for(int j=1;j<=a[n];j++){
        int sum=(qpow(j,n-tot+1)-qpow(j-1,n-tot+1)+mod)%mod*s[tot-1]%mod*j%mod;
        ans=(ans+sum)%mod;
        while(a[tot]==j){
            tot++;
        }
    }
    write_endl(ans*inv%mod);
    return 0;
}