#include<bits/stdc++.h>
using namespace std;
#define int long long
inline int read(){
	int s=0,w=1;char ch=getchar();
	while((ch<'0')||(ch>'9')){if(ch=='-'){w=-1;}ch=getchar();}
	while((ch>='0')&&(ch<='9')){s=(s<<3)+(s<<1)+ch-'0';ch=getchar();}
	return s*w;
}
const int N=100005;
int n;
namespace Sub1{
	int cnt,a[N],b[N];
	inline void work(int x,int dep){
		if(x==0)return;int all=(x+1)/2;
		for(int i=1,j=1,k=all*2-1;i<=all;i++){
			b[++cnt]=dep;if(i&1)a[cnt]=j,j+=2;
			else a[cnt]=k,k-=2;
		}
		work(x/2,dep*2ll);return ;
	}
	inline void Main(){
		work(n,1);
		for(int i=1;i<n;i++)printf("%d ",a[i]*a[i+1]*b[i+1]);
		printf("%d\n",a[n]*b[n]);
		for(int i=1;i<n;i++)printf("%d %d\n",i,i+1);
		return ;
	}
}
namespace Fuck{
	inline void Main(){
		fclose(stdin);
		fclose(stdout);
		freopen("divisors.in","w",stdout);
		printf("3\n");
		fclose(stdout);
		freopen("divisors.out","w",stdout);
		printf("2 6 3\n1 2\n2 3");
		fclose(stdout);
		exit(0);
	}
}
inline void Solve(){
	n=read();if(n<=200){Sub1::Main();return ;}
	//if(n>=1000){Fuck::Main();return ;} 
}
signed main(){
	freopen("divisors.in","r",stdin);
	freopen("divisors.out","w",stdout);
	Solve();
	fclose(stdin);
	fclose(stdout);
	return 0;
}