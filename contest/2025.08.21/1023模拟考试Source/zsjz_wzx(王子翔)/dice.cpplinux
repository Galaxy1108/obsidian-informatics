//#pragma GCC optimize(3)
//#pragma GCC optimize("inline")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse3","sse2","sse")
//#pragma GCC diagnostic error "-std=c++14"
//#pragma GCC diagnostic error "-fwhole-program"
//#pragma GCC diagnostic error "-fcse-skip-blocks"
//#pragma GCC diagnostic error "-funsafe-loop-optimizations"
//#pragma GCC optimize("fast-math","unroll-loops","no-stack-protector","inline")
#include<bits/stdc++.h>
#define ll long long
#define N 100005
#define M 5005
#define mo 1000000007
#define fo(i,a,b) for(int i=a;i<=b;++i)
#define fd(i,a,b) for(int i=a;i>=b;--i)
using namespace std;
int n,a[M],mx;
ll f[M][M],ans,g[M][M];
int read(){
	int res=0,f=1;
	char ch=getchar();
	while(ch<'0'||ch>'9'){
		if(ch=='-'&&((ch=getchar())>='0'&&(ch)<='9')) f=-1;
		else ch=getchar();
	}
	while(ch>='0'&&ch<='9')res=res*10+ch-'0',ch=getchar();
	return res*f;
}
ll fp(ll a,int b){
	ll res=1;
	while(b){
		if(b&1)res=res*a%mo;
		a=a*a%mo;
		b>>=1;
	}
	return res;
}
int main(){
	freopen("dice.in","r",stdin);
	freopen("dice.out","w",stdout);
	n=read();
	fo(i,1,n)a[i]=read(),mx=max(mx,a[i]);
	fo(i,1,a[1])f[1][i]=1,g[1][i]=(g[1][i-1]+f[1][i])%mo;
	fo(i,2,n){
		fo(j,1,mx){
			if(j<=a[i]){
				f[i][j]=(f[i][j]+g[i-1][j-1])%mo;
			}
			(f[i][j]+=f[i-1][j]*min(j,a[i])%mo)%=mo;
			g[i][j]=(g[i][j-1]+f[i][j])%mo;
		}
	}
	fo(i,1,mx){
		ans=(ans+f[n][i]*i%mo)%mo;
	}
	fo(i,1,n){
		ans=ans*fp(a[i],mo-2)%mo;
	}
	printf("%lld",ans);
}


