#include<bits/stdc++.h>
#define int long long
#define For(i,a,b) for(int i=(a);i<=(b);++i)
#define Rof(i,a,b) for(int i=(a);i>=(b);--i)
using namespace std;
const int Maxn=6e3,Mod=1e9+7;

inline int read()
{
    int x=0,f=1;
    char ch=getchar();
    while(ch<'0' || ch>'9')
    {
        if(ch=='-') f=-1;
        ch=getchar();
    }
    while(ch>='0' && ch<='9')
    {
        x=x*10+ch-'0';
        ch=getchar();
    }
    return x*f;
}
inline int Pow(int x,int y)
{
    int res=1;
    while(y)
    {
        if(y&1) res=res*x%Mod;
        x=x*x%Mod,y>>=1;
    }
    return res;
}

int n,Max,ans,val[Maxn+5],inv[Maxn+5];
int p[Maxn+5],f[Maxn+5];
int fac[Maxn+5],ifac[Maxn+5];
int pre[Maxn+5],suf[Maxn+5],X[Maxn+5],pos=1;
vector<int> v;

inline int P(int x)
{
    int res;
    while(pos<=n && val[pos]<=x) pos++;
    res=Pow(x,n-pos+1)*inv[pos]%Mod;
    return res;
}
inline int Solve(int l,int r,int id)
{
    int cnt=0,orz=n+3-id;
    if(r-l+1<=orz)
    {
        p[0]=P(l-1);
        For(i,l,r) p[++cnt]=P(i);
        For(i,1,cnt) f[i]=(l+i-1)*(p[i]-p[i-1]+Mod)%Mod;
        For(i,2,cnt) f[i]+=f[i-1];
        return f[cnt]%Mod;
    }
    p[0]=P(l-1);
    For(i,l,l+orz-1) p[++cnt]=P(i),X[cnt]=i;
    For(i,1,cnt) f[i]=(l+i-1)*(p[i]-p[i-1]+Mod)%Mod;
    For(i,2,cnt) f[i]=(f[i]+f[i-1])%Mod;
    pre[0]=suf[cnt+1]=1;
    For(i,1,cnt) pre[i]=pre[i-1]*(r-X[i])%Mod;
    Rof(i,cnt,1) suf[i]=suf[i+1]*(r-X[i])%Mod;
    int res=0;
    For(i,1,cnt)
    {
        int A=pre[i-1]*suf[i+1]%Mod;
        int B=ifac[i-1]*ifac[cnt-i]%Mod;
        if((cnt-i)&1) B=Mod-B;
        int C=f[i];
        res+=A*B%Mod*C%Mod;
    }
    return res%Mod;
}

signed main()
{
    freopen("dice.in","r",stdin);
    freopen("dice.out","w",stdout);

    n=read(),fac[0]=ifac[0]=1;
    For(i,1,n+5) fac[i]=fac[i-1]*i%Mod;
    ifac[n+5]=Pow(fac[n+5],Mod-2)%Mod;
    Rof(i,n+4,1) ifac[i]=ifac[i+1]*(i+1)%Mod;
    For(i,1,n) val[i]=read(),Max=max(Max,val[i]);
    sort(val+1,val+n+1); inv[n+1]=1;
    For(i,1,n) inv[i]=Pow(val[i],Mod-2);
    Rof(i,n,1) inv[i]=inv[i]*inv[i+1]%Mod;
    v.push_back(1);
    For(i,1,n) v.push_back(val[i]+1);
    v.push_back(Max+1);
    sort(v.begin(),v.end()),v.erase(unique(v.begin(),v.end()),v.end());
    int siz=v.size();
    For(i,0,siz-2) ans+=Solve(v[i],v[i+1]-1,i);
    printf("%lld\n",ans%Mod);
    return 0;
}