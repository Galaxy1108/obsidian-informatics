#include <bits/stdc++.h>

using namespace std;

using ll = long long;

const int mod = 1e9 + 7;
int mpow(int a, int b) {
  int ret = 1;
  for (; b; b >>= 1) {
    if (b & 1) ret = (ll)ret * a % mod;
    a = (ll)a * a % mod;
  }
  return ret;
}

const int N = 5e3;

int n, a[N + 5];
int fac[N + 5], ifac[N + 5], b[N + 5];
int cur = 1, ans;

int main() {
  freopen("dice.in", "r", stdin), freopen("dice.out", "w", stdout);
  scanf("%d", &n);
  fac[0] = 1;
  for (int i = 1; i <= n + 1; ++i) fac[i] = (ll)fac[i - 1] * i % mod;
  ifac[n + 1] = mpow(fac[n + 1], mod - 2);
  for (int i = n + 1; i; --i) ifac[i - 1] = (ll)ifac[i] * i % mod;
  b[0] = 1;
  for (int i = 1; i <= n; ++i)
    for (int j = 1; j <= i; ++j)
      b[i] = (b[i] + (ll)(mod - ifac[j + 1]) * b[i - j]) % mod;
  for (int i = 1; i <= n; ++i) scanf("%d", a + i);
  sort(a + 1, a + n + 1);
  ans = a[n];
  for (int i = n - 1; i >= 0; --i) {
    cur = (ll)cur * mpow(a[i + 1], mod - 2) % mod;
    if (a[i] != a[i + 1]) {
      int tmp = 0;
      for (int j = 1, pw0 = 1, pw1 = 1; j <= n - i + 1; ++j)
        pw0 = (ll)pw0 * a[i] % mod, pw1 = (ll)pw1 * a[i + 1] % mod,
        tmp = (tmp + (ll)(pw1 - pw0 + mod) * ifac[j] % mod * b[n - i - j + 1]) % mod;
      ans = (ans + (ll)(mod - cur) * tmp % mod * fac[n - i]) % mod;
    }
  }
  printf("%d\n", ans);
}
