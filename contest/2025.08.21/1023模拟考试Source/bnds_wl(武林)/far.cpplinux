#include <cstdio>

using namespace std;

int num[1 << 20], s[25][1 << 20];
bool b[1 << 20];
int c[65], l[45], r[45];
const int mod = 998244353;
int qpow(int x, int y)
{
	int ans = 1;
	while(y)
	{
		if(y & 1)
			ans = 1ll * ans * x % mod;
		x = 1ll * x * x % mod;
		y >>= 1;
	}
	return ans;
}

int main()
{
	freopen("far.in", "r", stdin);
	freopen("far.out", "w", stdout);
	int n, i, t, f = 1, k, j, m, sum;
	scanf("%d%d", &n, &m);
	for(i = 1; i <= n; i++)
	{
		scanf("%d%d", l + i, r + i);
		t = r[i] + 1;
		k = 0;
		while(!(t & 1))
			t >>= 1;
		if(t != 1 || l[i])
			f = 0;
	}
	if(f)
	{
		sum = 0;
		for(i = 1; i <= n; i++)
		{
			t = r[i] + 1;
			k = 0;
			while(!(t & 1))
			{
				t >>= 1;
				c[k]++;
				if(!c[k] && !c[m - 1 - k])
					sum--;
			}
			printf("%d\n", qpow(2, sum));
		}
		return 0;
	}
	for(j = 0; j < (1 << m); j++)
	{
		for(i = 0; i < m; i++)
			if(((j >> i) & 1) != ((j >> (m - i - 1)) & 1))
				break;
		b[j] = (i == m);
	}
	num[0] = 1;
	for(i = 1; i <= n; i++)
	{
		r[i]++;
		for(j = 0; j < (1 << m); j++)
			for(k = m; k >= 0; k--)
				s[k][j] = 0; 
		for(j = 0; j < (1 << m); j++)
			for(k = m; k >= 0; k--)
				if((r[i] >> k) & 1)
				{
					s[k][(j ^ r[i] ^ (1 << k)) & ((1 << m) - (1 << k))] += num[j];
					s[k][(j ^ r[i] ^ (1 << k)) & ((1 << m) - (1 << k))] %= mod;
				}
		for(j = 0; j < (1 << m); j++)
			for(k = m; k >= 0; k--)
				if((l[i] >> k) & 1)
				{
					s[k][(j ^ l[i] ^ (1 << k)) & ((1 << m) - (1 << k))] -= num[j];
					s[k][(j ^ l[i] ^ (1 << k)) & ((1 << m) - (1 << k))] += mod;
					s[k][(j ^ l[i] ^ (1 << k)) & ((1 << m) - (1 << k))] %= mod;
				}
		for(k = m - 1; k >= 0; k--)
			for(j = 0; j < (1 << m); j++)
			{
				s[k][j] += s[k + 1][j ^ (j & (1 << k))];
				s[k][j] %= mod;
			}
		for(j = 0; j < (1 << m); j++)
			num[j] = s[0][j];
		sum = 0;
		for(j = 0; j < (1 << m); j++)
			if(b[j])
				sum = (sum + num[j]) % mod;
		printf("%d\n", sum);
	}
	return 0;
}