#include<bits/stdc++.h>
#define For(i,a,b) for(int i=(a);i<=(b);++i)
#define Rep(i,a,b) for(int i=(a);i>=(b);--i)
using namespace std;
inline int read()
{
	char c=getchar();int x=0;bool f=0;
	for(;!isdigit(c);c=getchar())f^=!(c^45);
	for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);
	if(f)x=-x;return x;
}

// modint
#define mod 1000000007
struct modint{
	int x;
	modint(int o=0){x=o;}
	modint &operator = (int o){return x=o,*this;}
	modint &operator +=(modint o){return x=x+o.x>=mod?x+o.x-mod:x+o.x,*this;}
	modint &operator -=(modint o){return x=x-o.x<0?x-o.x+mod:x-o.x,*this;}
	modint &operator *=(modint o){return x=1ll*x*o.x%mod,*this;}
	modint &operator ^=(int b){
		modint a=*this,c=1;
		for(;b;b>>=1,a*=a)if(b&1)c*=a;
		return x=c.x,*this;
	}
	modint &operator /=(modint o){return *this *=o^=mod-2;}
	friend modint operator +(modint a,modint b){return a+=b;}
	friend modint operator -(modint a,modint b){return a-=b;}
	friend modint operator *(modint a,modint b){return a*=b;}
	friend modint operator /(modint a,modint b){return a/=b;}
	friend modint operator ^(modint a,int b){return a^=b;}
	friend bool operator ==(modint a,int b){return a.x==b;}
	friend bool operator !=(modint a,int b){return a.x!=b;}
	bool operator ! () {return !x;}
	modint operator - () {return x?mod-x:0;}
	bool operator <(const modint&b)const{return x<b.x;}
};
inline modint qpow(modint x,int y){return x^y;}

vector<modint> fac,ifac,iv;
inline void initC(int n)
{
	if(iv.empty())fac=ifac=iv=vector<modint>(2,1);
	int m=iv.size(); ++n;
	if(m>=n)return;
	iv.resize(n),fac.resize(n),ifac.resize(n);
	For(i,m,n-1){
		iv[i]=iv[mod%i]*(mod-mod/i);
		fac[i]=fac[i-1]*i,ifac[i]=ifac[i-1]*iv[i];
	}
}
inline modint C(int n,int m){
	if(m<0||n<m)return 0;
	return initC(n),fac[n]*ifac[m]*ifac[n-m];
}
inline modint sign(int n){return (n&1)?(mod-1):(1);}

#define fi first
#define se second
#define pb push_back
#define mkp make_pair
typedef pair<int,int>pii;
typedef vector<int>vi;

#define maxn 200005
#define inf 0x3f3f3f3f

int n,a[maxn],mx;
modint all=1;

struct fval{
	vector<modint>x,y;
	void ins(modint X,modint Y){x.pb(X),y.pb(Y);}
	void init(){x.clear(),y.clear();}
	modint val(modint k){
		int n=x.size();
		modint res=0;
		For(i,0,n-1){
			modint s1=1,s2=1;
			For(j,0,n-1)if(i!=j)s1*=(k-x[j]),s2*=(x[i]-x[j]);
			res+=y[i]*s1/s2;
		}
		return res;
	}
}F;

modint ask(int k,int l,int r){
	// i=l~r i^k
	modint sum=0;
	F.init();
	F.ins(0,0);
	For(i,1,k+2){
		sum+=qpow(i,k);
		F.ins(i,sum);
	}
	modint res=F.val(r)-F.val(l-1);
	res=0;For(i,l,r)res+=qpow(i,k);
//	cout<<"ask "<<k<<" "<<l<<" "<<r<<"\n";
	return res;
}

signed main()
{
	freopen("dice.in","r",stdin);
	freopen("dice.out","w",stdout); 
	n=read();
	For(i,1,n)a[i]=read(),mx=max(mx,a[i]),all*=a[i];
	modint res=0;
//	For(i,1,mx){
//		modint now=1;
//		For(j,1,n)now*=min(a[j],i);
//		res+=all-now;
//	}
	int lst=0;
	sort(a+1,a+n+1);
	for(int l=1,r=1;l<=n;l=r+1){
		r=l;
		while(r+1<=n && a[r+1]==a[l]) ++r;
		modint now=ask(n-(l-1),lst+1,a[l]);
		modint mul=1;
		For(i,1,l-1) mul*=a[i];
		res+=all*(a[l]-lst)-now*mul;
		lst=a[l];
	}
	res/=all;
	res+=1;
	cout<<res.x;
	return 0;
}