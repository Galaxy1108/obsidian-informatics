#include<cstdio>
#include<algorithm>
using namespace std;
#define mo 998244353
const int N=50;
int n,m;
long long l[N],r[N];
namespace sub1
{
	const int M=1.1e3;
	int vis[M],f[M],g[M],ans;
	int pd(int x)
	{
		for(int i=0;i<m;i++)
			if(((x&(1<<i))>>i)!=((x&(1<<m-i-1))>>m-i-1))return 0;
		return 1;
	}
	void main()
	{
		for(int i=0;i<(1<<m);i++)vis[i]=pd(i);
		f[0]=1;
		for(int i=1;i<=n;i++)
		{
			for(int j=0;j<(1<<m);j++)
				if(f[j])
					for(int k=l[i];k<=r[i];k++)
						g[j^k]=(g[j^k]+f[j])%mo;
			ans=0;
			for(int j=0;j<(1<<m);j++)f[j]=g[j],g[j]=0,ans=(ans+vis[j]*f[j])%mo;
			printf("%d\n",ans);
		}
	}
}
namespace sub2
{
	int mi[N];
	int sol(int u)
	{
		int mm=m-m/2,res=1;
		for(int i=m-1;i>=mm;i--)
		{
			int s=0,ss=0;
			for(int j=1;j<=u;j++)
			{
				if(r[j]>=i)s++;
				if(r[j]>=m-i-1)ss++;
			}
			if(!s&&!ss)continue;
			if(!s)res=1ll*res*mi[ss-1]%mo;
			else if(!ss)res=1ll*res*mi[s-1]%mo;
			else res=2ll*res%mo*mi[s-1]%mo*mi[ss-1]%mo;
		}
		if(m&1)
		{
			int s=0;
			for(int j=1;j<=u;j++)
				if(r[j]>=mm-1)s++;
			res=1ll*res*mi[s]%mo;
		}
		return res;
	}
	void main()
	{
		for(int i=1;i<=n;i++)
		{
			l[i]=r[i];
			r[i]=-1;
			while(l[i])r[i]++,l[i]/=2;
		}
		mi[0]=1;for(int i=1;i<=n;i++)mi[i]=2ll*mi[i-1]%mo;
		for(int i=1;i<=n;i++)printf("%d\n",sol(i));
	}
}
namespace sub3
{
	int f[2][2],g[2][2];
	int sol(int x)
	{
		if(x<0)return 0;
		for(int i=0;i<2;i++)
			for(int j=0;j<2;j++)
				f[i][j]=g[i][j]=0;
		f[0][0]=1;
		int mm=m-m/2;
		for(int i=m-1;i>=mm;i--)
		{
			for(int j=0;j<2;j++)
				for(int k=0;k<2;k++)
					if(f[j][k])
					{
						for(int u=0;u<2;u++)
							if(!u||(j||(x&(1<<i))))
							{
								int uu=0,vv=0;
								if(j)uu=1;
								else if((x&(1<<i))&&!u)uu=1;
								if(k)vv=1;
								else if(!(x&(1<<m-i-1))&&u)vv=1;
								g[uu][vv]=(g[uu][vv]+f[j][k])%mo;
							}
					}
			for(int j=0;j<2;j++)
				for(int k=0;k<2;k++)
					f[j][k]=g[j][k],g[j][k]=0;
		}
		int res=0;
		if(m&1)
		{
			int u=(x&(1<<mm-1))>>mm-1;
			res=(res+1ll*(u+1)*f[0][0]%mo)%mo;
			res=(res+1ll*u*f[0][1]%mo)%mo;
			res=(res+1ll*(f[1][0]+f[1][1])%mo*2%mo)%mo;
		}
		else
		{
			res=(res+f[0][0])%mo;
			res=(res+f[1][0])%mo;
			res=(res+f[1][1])%mo;
		}
		return res;
	}
	void main()
	{
		printf("%d",(sol(r[1])-sol(l[1]-1)+mo)%mo);
	}
}
int main()
{
	freopen("far.in","r",stdin);
	freopen("far.out","w",stdout);
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++)scanf("%lld%lld",&l[i],&r[i]);
	if(m<=10)sub1::main();
	else if(n==1)sub3::main();
	else sub2::main();
	return 0;
}