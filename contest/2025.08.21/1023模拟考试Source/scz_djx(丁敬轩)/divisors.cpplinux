#include <bits/stdc++.h>
using namespace std;
const int N(2600);
int n,a[N],num[N];
inline int read(){
	int FF=0,RR=1;
	char ch=getchar();
	for(;!isdigit(ch);ch=getchar())
		if(ch=='-')
			RR=-1;
	for(;isdigit(ch);ch=getchar())
		FF=(FF<<1)+(FF<<3)+ch-48;
	return FF*RR;
}
int gcd(int a,int b){
	return b==0?a:gcd(b,a%b);
}
int lcm(int a,int b){
	return a/gcd(a,b)*b;
}
int main(){
	freopen("divisors.in","r",stdin);
	freopen("divisors.out","w",stdout);
	n=read();
	int cnt=1;
	for(int i=1;i<n;i+=2)
		a[i]=++cnt;
	cnt=n;
	for(int i=2;i<n;i+=2)
		a[i]=cnt--; 
	num[1]=a[1];
	for(int i=2;i<n;i++){
		num[i]=lcm(a[i],a[i-1]);
		int t=gcd(num[i],num[i-1]);
		if(t>a[i-1]&&t/a[i-1]*a[i-1]==t)
			return 0;
	}
	num[n]=a[n-1]; 
	for(int i=1;i<=n;i++)
		printf("%d ",num[i]);
	puts("");
	for(int i=1;i<n;i++)
		printf("%d %d\n",i,i+1);
	return 0;
}
