#include<bits/stdc++.h>
using namespace std;
inline int read(){
	int x=0;char ch=getchar();
	while(!isdigit(ch))ch=getchar();
	while(isdigit(ch))x=(x<<3)+(x<<1)+(ch^48),ch=getchar();
	return x;
}
inline void write(int x){
	if(x>9)write(x/10);
	putchar(x%10|48);
}
inline void writeln(int x){
	write(x),putchar('\n');
}
int a[2555],n,s[2555],lim=11000;
int gcd(int x,int y){
	return y?gcd(y,x%y):x;
}
int lcm(int x,int y){
	return x/gcd(x,y)*y;
}
int random(int x){
	return (rand()*32768ll+rand())%x+1;
}
bool work(){
	s[1]=random(lim/a[1])*a[1];
	int t,cnt;
	for(int i=2;i<n;++i){
		cnt=0;
		while(1){
			t=random(lim/lcm(a[i-1],a[i]))*lcm(a[i-1],a[i]);
			if(gcd(t,s[i-1])==a[i-1])break;
			if(++cnt==40)return 0;
		}
		s[i]=t;
	}
	while(1){
		cnt=0;
		t=random(lim/a[n-1])*a[n-1];
		if(gcd(t,s[n-1])==a[n-1])break;
		if(++cnt==40)return 0;
	}
	s[n]=t;
	int tmp=0;
	for(int i=1;i<=n;++i)tmp=gcd(tmp,s[i]);
	if(tmp==1)return 1;
	return 0;
}
int main(){
	freopen("divisors.in","r",stdin);
	freopen("divisors.out","w",stdout);
	ios::sync_with_stdio(0);
	srand(time(0));
	cin>>n;
	for(int i=1;i<n;++i)a[i]=i+1;
	while(1){
		random_shuffle(a+1,a+n);
		int fl=1;
		for(int i=1;i<n-1;++i)if(lcm(a[i],a[i+1])>lim)fl=0;
		if(fl){
			int cnt=0;
			while(1){
				if(work()){
					for(int i=1;i<=n;++i)cout<<s[i]<<' ';
					cout<<'\n';
					for(int i=1;i<n;++i)cout<<i<<' '<<i+1<<'\n';
					return 0;
				}
				if(++cnt==40)break;
			}
		}
	}
	return 0;
}
