#include<iostream>
#include<cstdio>
#include<cmath>
#include<algorithm>
#define R register
using namespace std;
const int N=1e6+5;
const long long mo=998244353;
int n,nn,m,cnt,a[N];
long long s,ans,jls[N],l[N],r[N],sj[N],f[N][2],dis[N],jl[N],ksm[N],cal[105][105];
long long get(long long ss,int ws){return (ss>>ws)&1;}
void pd(int x)
{
	for (int i=1;i<=n;++i)
		if (a[i]) sj[i]=r[i];
		else sj[i]=l[i]-1;
	for (int i=1;i<=n;++i) if (sj[i]<0) return;
	long long ss=0;
	for (int i=1;i<=n;++i) ss^=sj[i];
	if (ss==s) ans+=x;
	for (int i=m-1;i>=0;--i)
	{
		long long s2=0;
		f[n+1][0]=1;f[n+1][1]=0;
		f[n][0]=((1ll<<i)&sj[n])?(1ll<<i):(sj[n]-(dis[i]&sj[n])+1ll);f[n][0]%=mo;
		f[n][1]=((1ll<<i)&sj[n])?((sj[n]-(dis[i]&sj[n])+1ll)):0;f[n][1]%=mo;
		for (R int j=n-1;j>=1;--j)
		{
			jl[j]=(sj[j]-(dis[i]&sj[j])+1ll)%mo;R bool bj=(1ll<<i)&sj[j];
			f[j][0]=(f[j+1][0]*(bj?ksm[i]:jl[j])+f[j+1][1]*(bj?jl[j]:0))%mo;
			f[j][1]=(f[j+1][0]*(bj?jl[j]:0)+f[j+1][1]*(bj?ksm[i]:jl[j]))%mo;
		}
		int mb=(s>>i)&1;
		s2=0;R long long s3=1;
		for (R int j=1;j<=n;++j)
		{
			if ((1ll<<i)&sj[j])
			{
				ans=(ans+f[j+1][mb^s2]*s3*x)%mo;
			}
			s2^=1&(sj[j]>>i);s3=s3*jl[j]%mo;
		}
		s2=0;
		for (R int j=1;j<=n;++j) s2^=sj[j]&dis[i];
		if (s2!=(s&dis[i])) break;
	}
}
void dg(int x,int zf)
{
	if (x>n)
	{
		for (int i=1;i<=cnt;++i)
		{
			s=jls[i];pd(zf);
		}
		return;
	}
	a[x]=1;dg(x+1,zf);
	if (l[x]!=0){a[x]=0;dg(x+1,-zf);}
}
int main()
{
	freopen("far.in","r",stdin);freopen("far.out","w",stdout);
	scanf("%d%d",&nn,&m);
	ksm[0]=1;for (int i=1;i<=m;++i) ksm[i]=ksm[i-1]*2ll%mo;
	dis[0]=(1ll<<m)-1ll;
	for (int i=1;i<m;++i) dis[i]=dis[i-1]^(1ll<<i-1);
	cal[0][0]=1;
	for (int i=1;i<=nn;++i)
	{
		cal[i][0]=1;
		for (int j=1;j<=nn;++j) cal[i][j]=(cal[i-1][j-1]+cal[i-1][j])%mo;
	}
	bool bj=true;
	for (int i=1;i<=nn;++i) 
	{
		scanf("%lld%lld",&l[i],&r[i]);
		if (l[i]!=0||r[i]!=(1ll<<m)-1ll) bj=false;
	}
	if (bj)
	{
		for (int i=1;i<=nn;++i)
		{
			long long cs1=0,cs2=0,ans=1;
			for (int j=1;j<=i;j+=2) cs1=(cs1+cal[i][j])%mo;
			for (int j=0;j<=i;j+=2) cs2=(cs2+cal[i][j])%mo;
			for (int j=1;j<=m/2;++j) ans=ans*(cs1*cs1%mo+cs2*cs2%mo)%mo;
			if (m&1) ans=ans*ksm[i]%mo;
			printf("%lld\n",ans);
		}
		return 0;
	}
	for (s=0;s<ksm[m];++s)
	{
		bool bj=true;
		for (int i=0;i<m/2;++i)
			if (get(s,i)!=get(s,m-1-i)) bj=false;
		if (bj) jls[++cnt]=s;
	}
	for (n=1;n<=nn;++n)
	{
		ans=0;
		dg(1,1);
		printf("%lld\n",(ans+mo)%mo);
	}
	return 0;
}
