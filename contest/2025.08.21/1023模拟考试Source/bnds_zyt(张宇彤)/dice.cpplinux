/*
¿¼ÂÇÃ¿¸öÃæ¶ÔÓÚ´ð°¸µÄ¹±Ï×
·Ö¿ª¿¼ÂÇ×î´óÖµÎ¨Ò»ºÍ×î´óÖµ²»Î¨Ò»Ê±µÄÇé¿ö
²»Î¨Ò»Ê±, Áî½öÕâÒ»Î»i×îÐ¡Ê±ÓÐ¹±Ï× 
*/
#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <string>
#include <queue>
#include <deque>
#include <cmath>
#include <vector>
#include <map>
#include <stack>
#include <set>
#define LL long long
#define ULL unsigned long long
#define IT set<int>::iterator
using namespace std;
const int MOD = 1e9+7, MAXN = 5005;
int n, a[MAXN];
LL ans, cnt, s[MAXN];
int read()
{
	int x = 0;
	bool flag = 1;
	char c = getchar();
	while(c < '0' || c > '9')
	{
		if(c == '-') flag = 0;
		c = getchar();
	}
	while(c >= '0' && c <= '9')
	{
		x = x * 10 + c - '0';
		c = getchar();
	}
	return flag ? x : ~(x - 1);
}
int qp(int x, int y)
{
	if(y == 0) return 1;
	if(y == 1) return x;
	int mid = y >> 1;
	LL res = qp(x, mid);
	res *= res;
	res %= MOD;
	if(y & 1)
	{
		res *= x;
		res %= MOD;
	}
	return (int)res;
}
int get(int a, int p)
{
   if(a % p == 0) return -1;
   else return qp(a, p - 2);
}
int main()
{
	freopen("dice.in", "r", stdin);
	freopen("dice.out", "w", stdout);
	n = read();
	s[0] = 1;
	for(int i = 1; i <= n; ++i)
		a[i] = read();
	sort(a + 1, a + n + 1);
	for(int i = 1; i <= n; ++i)
	{
		s[i] = s[i - 1] * a[i];
		s[i] %= MOD;
	}
	for(int i = 1; i <= n; ++i)
	{
		int cnt = 0;
		for(int j = 1; j <= a[i - 1]; ++j)
		{
			if(j > a[cnt + 1]) ++cnt;
			LL t = s[cnt] * qp(j - 1, i - 1 - cnt) * qp(j, n - i) * j;
			t %= MOD;
			ans += t;
			ans %= MOD;
//			printf("%d\n", ans);
		}
//		puts("");
		for(int j = a[i - 1] + 1; j <= a[i]; ++j)
		{
			LL t = s[i - 1] * qp(j, n - i) * j;
			t %= MOD;
			ans += t;
			ans %= MOD;
//			printf("%d\n", ans);
		}
//		puts("");
	}
//	printf("%d %d\n", ans, s[n]);
	printf("%d\n", ans * qp(s[n], 1e9 + 7 - 2) % MOD);
	return 0;
}
