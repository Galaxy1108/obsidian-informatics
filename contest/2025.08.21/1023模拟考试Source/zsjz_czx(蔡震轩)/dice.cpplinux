#include<bits/stdc++.h>
using namespace std;
const int N=5010,mod=1e9+7;
int f[N],a[N],B[N],fact[N],ifact[N],n,ans,prod=1;
int add(int x,int y) {return x+y<mod?x+y:x+y-mod;}
int sub(int x,int y) {return x>=y?x-y:x-y+mod;}
int mul(int x,int y) {return 1ll*x*y%mod;}
int mul(int x,int y,int z) {return 1ll*x*y%mod*z%mod;}
int fastpow(int x,int y)
{
	int res=1;
	for (;y;y>>=1,x=mul(x,x))
		if (y&1) res=mul(res,x);
	return res;
}
int S(int n,int k)
{
	int res=0;
	for (int i=0;i<=k;++i)
		res=add(res,mul(fastpow(n+1,i+1),ifact[i+1],B[k-i]));
	return mul(res,fact[k]);
}
int main()
{
	freopen("dice.in","r",stdin);
	freopen("dice.out","w",stdout);
	scanf("%d",&n);
	const int T=n+5;
	for (int i=1;i<=n;++i) scanf("%d",a+i);
	for (int i=fact[0]=1;i<=T;++i) fact[i]=mul(fact[i-1],i);
	ifact[T]=fastpow(fact[T],mod-2);
	for (int i=T;i;--i) ifact[i-1]=mul(ifact[i],i);
	for (int i=B[0]=1;i<=T;++i)
		for (int j=0;j<i;++j)
			B[i]=sub(B[i],mul(B[j],ifact[i-j+1]));
	sort(a+1,a+n+1),a[0]=1;
	for (int i=1;i<=n;++i) prod=mul(prod,a[i]);
	for (int i=1,pre=1;i<=n;++i)
		ans=sub(ans,mul(pre,sub(S(a[i]-1,n-i+1),S(a[i-1]-1,n-i+1)))),
		pre=mul(pre,a[i]);
	ans=mul(add(ans,mul(prod,a[n])),fastpow(prod,mod-2));
	printf("%d",ans);
}