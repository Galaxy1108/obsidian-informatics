#include<bits/stdc++.h>
using namespace std;
const int maxV=11000,N=2505;
int a[N],n,t;
bool vis[maxV],used[maxV+5];;
vector <int> e[maxV+5];
int gcd(int x,int y) {return y?gcd(y,x%y):x;}
void dfs(int x,int dad,int d)
{
	vis[d]=1;
	if (d==1) return;
	for(int y:e[x]) if (y^dad)
		dfs(y,x,gcd(d,a[y]));
}
int main()
{
	freopen("divisors.in","r",stdin);
	freopen("divisors.out","w",stdout);
	scanf("%d",&n);
	if (n*(n-1)*(n-2)<=maxV)
		a[++t]=n*(n-1)*(n-2);
	else a[++t]=min(n*(n-1),maxV);
	used[a[1]]=1;
	for (int i=maxV;i;--i) if (!used[i])
	{
		for (int j=1;j<=t;++j)
		{
			int d=gcd(i,a[j]);
			if (1<d && d<=n && !vis[d])
			{
				a[++t]=i,vis[d]=1,used[i]=1;
				e[j].emplace_back(t);
				break;
			}
		}
		for (int j=1;j<=t;++j) dfs(j,0,a[j]);
	}
	for (int i=1;i<=n;++i) printf("%d ",a[i]);
	for (int x=1;x<=n;++x) for (int y:e[x]) printf("\n%d %d",x,y);
}