//Lemt_xxq
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<iostream>
#include<map>
#include<bitset>
#include<queue>
#include<ctime>
#define ll long long
#define R register
#define I inline
#define N 5005
#define mo
#define F freopen("lineup.in","r",stdin),freopen("lineup.out","w",stdout);
using namespace std;
ll ss,ff,n; char ch; struct node{ll v,id;}a[N];
I ll read() { ch=getchar(),ss=0,ff=1;
	for (;(ch<48||ch>57)&&ch!=45;) ch=getchar(); if (ch==45) ff=-1;
	for (;ch<48||ch>57;) ch=getchar(); for (;ch>=48&&ch<=57;) ss=ss*10+ch-48,ch=getchar(); return ss*ff;
}
I void print(ll Lz) {Lz<0?putchar(45),Lz=-Lz:Lz=Lz; if (Lz>9) print(Lz/10); putchar(Lz%10+48);}
I bool cmp(node xx,node yy) {return xx.v<yy.v||xx.v==yy.v&&xx.id<yy.id;}
int main() {
	F n=read(); for (R ll i=1;i<=n;i++) a[i].v=read(),a[i].id=i; sort(a+1,a+1+n,cmp);
	ll ans=0; for (R ll i=1;i<=n;i++) ans+=abs(a[i].id-i); printf("%lld",ans);
}
