#include <iostream>
#include <cstdio>
#include <algorithm>
#define int long long
#define mod 1000000007
using namespace std;
int Qpow(int a,int p){
	if (p==0)return 1;
	int t=Qpow(a,p/2);
	t=t*t%mod;
	if (p&1)t=t*a%mod;
	return t;
}
int n,a[5005],inva[5005],ans;
int _pow[5005][5005];
int fac[5005],invfac[5005];
int pr[5005];
int ask(int n,int k){
	if (n<1)return 0;
	int ans=0;
    pr[k+3]=fac[0]=1;
    for(int i=k+2;i>=1;i--)
        pr[i]=pr[i+1]*(n-i)%mod;
    int pl=1,y=0;
    for(int i=1;i<=k+2;i++){
        y=(y+_pow[i][k])%mod;
        int a=pl*pr[i+1]%mod;
        int b=invfac[i-1]*((k-i)&1?-1:1)*invfac[k+2-i]%mod;
    	pl=pl*(n-i)%mod;
        ans=ans+y*a%mod*b%mod;
    }
    ans%=mod;
    if (ans<0)ans+=mod;
    return ans;
}
int work(int x,int y,int k){
	int ans=(Qpow(y,k+1)+mod-Qpow(x,k+1))%mod;
	ans=(ans+mod-(ask(y-1,k)-ask(x-1,k)))%mod;
	return ans;
}
signed main(){
	freopen("dice.in","r",stdin);
	freopen("dice.out","w",stdout);
	for (int i=0;i<=5003;i++){
		_pow[i][0]=1;
		for (int j=1;j<=5003;j++)_pow[i][j]=_pow[i][j-1]*i%mod;
	}
	fac[0]=1;
	for (int i=1;i<=5003;i++)
        fac[i]=fac[i-1]*i%mod;
    invfac[5003]=Qpow(fac[5003],mod-2);
    for (int i=5002;i>=0;i--)invfac[i]=invfac[i+1]*(i+1)%mod;
	cin>>n;
	for (int i=1;i<=n;i++)cin>>a[i];
	sort(a+1,a+1+n);
	for (int i=1;i<=n;i++)inva[i]=Qpow(a[i],mod-2);
	for (int i=1;i<=n;i++){
		if (a[i]!=a[i-1]){
			int s=work(a[i-1],a[i],n-i+1);
			for (int j=i;j<=n;j++)s=s*inva[j]%mod;
			ans=(ans+s)%mod;
		}
	}
	cout<<ans<<endl;
	return 0;
}