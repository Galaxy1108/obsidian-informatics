#include<bits/stdc++.h>
#define ll long long    
#define ull unsigned long long
#define db double
#define ldb long double
#define pb push_back
#define mp make_pair
#define pii pair<int, int>
#define FR first
#define SE second
#define int long long
using namespace std;
inline int read() {
    int x = 0; bool op = 0;
    char c = getchar();
    while(!isdigit(c))op |= (c == '-'), c = getchar();
    while(isdigit(c))x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();
    return op ? -x : x;
}
const int N = 110;
const int P = 998244353;
void add(int &a, int b) {a = (a + b) % P;}
void sub(int &a, int b) {a = (a - b + P) % P;}
int ksm(int x, int k) {
    int res = 1;
    for(int pw = x; k; (k & 1) ? res = 1ll * res * pw % P : 0, pw = 1ll * pw * pw % P, k >>= 1);
    return res;
}
int n, m;
int l[N], r[N];
namespace S1 {
    int f[1 << 16], g[1 << 16], b[1 << 16];
    void MAIN() {
        f[0] = 1;
        for(int i = 1; i <= n; i++) {
            memset(b, 0, sizeof(b));
            swap(f, g); memset(f, 0, sizeof(f));
            for(int j = 0; j < (1ll << (m / 2)); j++) {
                int t[4][4] = {0}, p[4][4] = {0};
                t[0][0] = 1;
                for(int k = 0; k < m / 2; k++) {
                    int x1 = k, x2 = m - k - 1;
                    swap(t, p); memset(t, 0, sizeof(t));
                    for(int x = 0; x < 4; x++)for(int y = 0; y < 4; y++) {
                        for(int z = 0; z < 2; z++)for(int w = 0; w < 2; w++) {
                            if((z ^ w) != (j >> k & 1))continue;
                            if(((x & 1) == 0) && (z < (l[i] >> x2 & 1)))continue;
                            if(((x & 2) == 0) && (z > (r[i] >> x2 & 1)))continue;
                            int nx = x, ny = y;
                            if(z > (l[i] >> x2 & 1))nx |= 1;
                            if(z < (r[i] >> x2 & 1))nx |= 2;
                            if(w < (l[i] >> x1 & 1))ny |= 1;
                            else if(w > (l[i] >> x1 & 1))ny &= 2;
                            if(w > (r[i] >> x1 & 1))ny |= 2;
                            else if(w < (r[i] >> x1 & 1))ny &= 1;
                            add(t[nx][ny], p[x][y]);
                        }
                    }
                }
                if(m & 1) {
                    int pos = (m - 1) / 2;
                    swap(t, p); memset(t, 0, sizeof(t));
                    for(int x = 0; x < 4; x++)for(int y = 0; y < 4; y++) {
                        for(int z = 0; z < 2; z++) {
                            int nx = x;
                            if(((x & 1) == 0) && (z < (l[i] >> pos & 1)))continue;
                            if(((x & 2) == 0) && (z > (r[i] >> pos & 1)))continue;
                            if(z > (l[i] >> pos & 1))nx |= 1;
                            if(z < (r[i] >> pos & 1))nx |= 2;
                            add(t[nx][y], p[x][y]);
                        }
                    }
                }
                for(int x = 0; x < 4; x++)for(int y = 0; y < 4; y++) {
                    if(((x ^ 3) & y) == 0)add(b[j], t[x][y]);
                }
            }
            for(int i = 0; i < (1ll << (m / 2)); i++) {
                for(int j = 0; j < (1ll << (m / 2)); j++) {
                    add(f[i ^ j], 1ll * g[i] * b[j] % P);
                }
            }
            printf("%lld\n", f[0]);
        }
    }
};
namespace S2 {
    int ans[N];
    void MAIN() {
        int lim = 0; while((1ll << lim) < (r[1] + 1))lim++;
        ans[1] = ksm(2, max(0ll, lim - m / 2));
        for(int i = 2; i <= n; i++)ans[i] = 1ll * ans[i - 1] * ((r[i] + 1) % P) % P;
        for(int i = 1; i <= n; i++)printf("%lld\n", ans[i]);
        return ;
    }
};
namespace S3 {
    void MAIN() {
        for(int i = 1; i <= n; i++) {
            int ans = 0;
            for(int j = 0; j < 1; j++) {
                int t[4][4] = {0}, p[4][4] = {0};
                t[0][0] = 1;
                for(int k = 0; k < m / 2; k++) {
                    int x1 = k, x2 = m - k - 1;
                    swap(t, p); memset(t, 0, sizeof(t));
                    for(int x = 0; x < 4; x++)for(int y = 0; y < 4; y++) {
                        for(int z = 0; z < 2; z++)for(int w = 0; w < 2; w++) {
                            if((z ^ w) != (j >> k & 1))continue;
                            if(((x & 1) == 0) && (z < (l[i] >> x2 & 1)))continue;
                            if(((x & 2) == 0) && (z > (r[i] >> x2 & 1)))continue;
                            int nx = x, ny = y;
                            if(z > (l[i] >> x2 & 1))nx |= 1;
                            if(z < (r[i] >> x2 & 1))nx |= 2;
                            if(w < (l[i] >> x1 & 1))ny |= 1;
                            else if(w > (l[i] >> x1 & 1))ny &= 2;
                            if(w > (r[i] >> x1 & 1))ny |= 2;
                            else if(w < (r[i] >> x1 & 1))ny &= 1;
                            add(t[nx][ny], p[x][y]);
                        }
                    }
                }
                if(m & 1) {
                    int pos = (m - 1) / 2;
                    swap(t, p); memset(t, 0, sizeof(t));
                    for(int x = 0; x < 4; x++)for(int y = 0; y < 4; y++) {
                        for(int z = 0; z < 2; z++) {
                            int nx = x;
                            if(((x & 1) == 0) && (z < (l[i] >> pos & 1)))continue;
                            if(((x & 2) == 0) && (z > (r[i] >> pos & 1)))continue;
                            if(z > (l[i] >> pos & 1))nx |= 1;
                            if(z < (r[i] >> pos & 1))nx |= 2;
                            add(t[nx][y], p[x][y]);
                        }
                    }
                }
                for(int x = 0; x < 4; x++)for(int y = 0; y < 4; y++) {
                    if(((x ^ 3) & y) == 0)add(ans, t[x][y]);
                }
            }
            printf("%lld\n", ans);
        }
    }
};
signed main() { 
    freopen("far.in", "r", stdin);
    freopen("far.out", "w", stdout);
    n = read(); m = read();
    for(int i = 1; i <= n; i++)l[i] = read(), r[i] = read();
    if(m <= 20)return S1::MAIN(), 0;
    if(n == 1)return S3::MAIN(), 0;
    return S2::MAIN(), 0;
    return 0;
}