#include<bits/stdc++.h>
using namespace std;
#define N 5005
int read(){
	int w=0,f=1;
	char c=' ';
	while(c<'0'||c>'9')c=getchar(),f=c=='-'?-1:f;
	while(c>='0'&&c<='9')w=w*10+c-48,c=getchar();
	return w*f;
}
const int mod=1e9+7;
struct mint{
    int x;
    mint(int X=0){x=X;}
    mint operator=(int o){return x=o,*this;}
    mint operator+=(mint o){return x=x+o.x>=mod?x+o.x-mod:x+o.x,*this;}
    mint operator-=(mint o){return x=x-o.x<0?x-o.x+mod:x-o.x,*this;}
    mint operator*=(mint o){return x=1ll*x*o.x%mod,*this;}
    mint operator^=(int y){
        mint res=1,z=*this;
        while(y){
            if(y&1)res*=z;
            z*=z,y>>=1;
        }
        return x=res.x,*this;
    }
    mint operator^=(mint y){return *this^=y.x;}
    mint operator/=(mint o){return *this*=o^=(mod-2);}
    mint operator+=(int o){return x=x+o>=mod?x+o-mod:x+o,*this;}
    mint operator-=(int o){return x=x-o<0?x-o+mod:x-o,*this;}
    mint operator*=(int o){return x=1ll*x*o%mod,*this;}
    mint operator/=(int o){return *this*=mint(o)^=(mod-2);}
    friend mint operator+(mint a,int b){return a+=b;}
    friend mint operator-(mint a,int b){return a-=b;}
    friend mint operator*(mint a,int b){return a*=b;}
    friend mint operator/(mint a,int b){return a/=b;}
    friend mint operator^(mint a,int b){return a^=b;}
    friend mint operator+(mint a,mint b){return a+=b;}
    friend mint operator-(mint a,mint b){return a-=b;}
    friend mint operator*(mint a,mint b){return a*=b;}
    friend mint operator/(mint a,mint b){return a/=b;}
    friend mint operator^(mint a,mint b){return a^=b;}
    bool operator!(){return !x;}
    mint operator-(){return x?mod-x:0;}
    operator int(){return x;}
}fac[N],ifac[N],b[N],ans;
int n,a[N];
void init(){
	fac[0]=1;
	for(int i=1;i<N;i++)
		fac[i]=fac[i-1]*i;
	ifac[N-1]=mint(1)/fac[N-1];
	for(int i=N-1;i>0;i--)
		ifac[i-1]=ifac[i]*i;
}
signed main(){
	freopen("dice.in","r",stdin);
	freopen("dice.out","w",stdout);
	init();
	n=read();
	for(int i=1;i<=n;i++)
		a[i]=read();
	b[0]=1;
	for(int i=1;i<=n;i++)
		for(int j=1;j<=i;j++)
			b[i]-=b[i-j]*ifac[j+1];
	sort(a+1,a+n+1),ans=a[n];
	mint now=1,p1,p2,nr;
	for(int i=n-1;i>=0;i--){
		now/=a[i+1],p1=1,p2=1,nr=0;
		for(int j=1;n-i-j+1>=0;j++)
			p1*=a[i],p2*=a[i+1],nr+=(p2-p1)*ifac[j]*b[n-i-j+1];
		ans-=nr*now*fac[n-i];
	}
	printf("%d\n",(int)ans);
	return 0;
}