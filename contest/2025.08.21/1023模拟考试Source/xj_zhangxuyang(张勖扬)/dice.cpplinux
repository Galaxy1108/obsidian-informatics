#pragma GCC optimize("Ofast")
#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
const LL MOD=1000000007;
const int NUM=5005;
int read()
{
    int x=0,f=1;
    char c=getchar();
    while(c<'0'||c>'9')
	{
        if(c=='-') f=-1;
		c=getchar();
	}
    while(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-'0',c=getchar();
    return x*f;
}
int n;
LL a[NUM];
bool cmp(int x,int y)
{
    return x>y;
}
LL fast_pow(LL base,LL x)
{
    LL re=1;
    while(x)
    {
        if(x&1) re=(re*base)%MOD;
        base=(base*base)%MOD;
        x>>=1;
    }
    return re;
}
int main()
{
    freopen("dice.in","r",stdin);
    freopen("dice.out","w",stdout);
    LL inv=1,ans=0;
    int j=0;
    n=read();
    for(int i=1;i<=n;i++) a[i]=read();
    sort(a+1,a+n+1,cmp);
    for(LL i=a[1];i;i--)
    {
        while(j<n&&a[j+1]>=i)
            inv=(inv*fast_pow(a[++j],MOD-2))%MOD;
        ans=(ans+fast_pow(i,j)*inv%MOD*i%MOD)%MOD;
        ans=(MOD+ans-fast_pow(i-1,j)*inv%MOD*i%MOD)%MOD;
    }
    printf("%lld",ans);
}