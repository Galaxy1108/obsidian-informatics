#include<bits/stdc++.h>
using namespace std;
#define ll int
#define f(i,a,b) for(ll i=a;i<=b;i++)
#define wt int tt=d;while(tt--)
#define py puts("Yes")
#define pn puts("No")
#define pritnf printf
#define fe(i,e) for(int i=0;i<e.size();i++)
#define vi vector<ll>
inline ll rd() {
	ll x=0,f=1;
	char c=getchar();
	while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}
	while(isdigit(c))x=x*10+c-'0',c=getchar();
	return x*f;
}
ll dx[4]={0,1,0,-1};
ll dy[4]={1,0,-1,0};
#define d rd()
#define pb push_back
const ll N=300010;
struct edge{ll v,w,nx;}e[N<<1];
ll hd[N],cnt;
void add(ll u,ll v,ll w){e[++cnt]=(edge){v,w,hd[u]};hd[u]=cnt;}
ll qp(ll a,ll b,ll p){
	ll ans=1;while(b){
		if(b&1)ans=ans*a%p;
		a=a*a%p;b>>=1;
	}return ans;
}ll n,m;
bool tp;
ll c[5010][5010];
ll a[5010][5010];
ll U[1000010],V[1000010],W[1000010];
ll sz[1000010];
ll mxs[1000010];
ll F[1000010];
void dfs(ll u,ll fa){
	F[u]=fa;
	sz[u]=1;mxs[u]=0;
	for(int i=hd[u];i;i=e[i].nx){
		ll v=e[i].v;if(v==fa)continue;
		dfs(v,u),sz[u]+=sz[v];
		mxs[u]=max(mxs[u],sz[v]);
	}mxs[u]=max(mxs[u],n-sz[u]);
}
ll f[1000010];
void sub(){
	dfs(1,0);ll ans=0;
	f(i,1,n-1){
		ll u=U[i],v=V[i],w=W[i];
		if(F[u]==v)swap(u,v);
		if(sz[v]==mxs[u])f[i]++;
		if(n-sz[v]==mxs[v])f[i]++;
		ans^=f[i];
	}printf("%lld",ans);
}
ll ans;
int main(){
	freopen("treeq.in","r",stdin);
	freopen("treeq.out","w",stdout);
	n=d;f(i,1,n-1){
		ll u=i+1,v=d,w=d;
		add(u,v,w),add(v,u,w);
		U[i]=u,V[i]=v,W[i]=w;
		if(w!=1)tp=1;
	}if(!tp){
		sub();
		return 0;
	}f(i,1,n){
		dfs(i,0);ll mx=0;
		f(j,1,n-1){
			ll u=U[j],v=V[j],w=W[j];
			if(F[u]==v)swap(u,v);
		//	cout<<u<<" "<<v<<" "<<sz[v]*w<<endl;
			mx=max(mx,sz[v]*w);
		}//cout<<mx<<endl;
		f(j,1,n-1){
			ll u=U[j],v=V[j],w=W[j];
			if(F[u]==v)swap(u,v);
			if(sz[v]*w==mx)f[j]++;
		}
	}f(i,1,n-1)ans^=f[i];
	printf("%lld",ans);
	return 0;
}
/*
5
1 2 3
2 3 1
3 4 1
3 5 1 
*/