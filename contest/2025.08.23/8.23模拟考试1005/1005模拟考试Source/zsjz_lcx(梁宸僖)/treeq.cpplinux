#include<cstdio>
#include<vector>
#define int long long
using namespace std;
int n,f[5010],w[5010],c[5010][5010],l[5010],r[5010],size[5010],tot,cnt,t[5010],ans,a[5010][5010],top,stk[5010];
struct node{int last,en,next,v;} e[10010];
void add(int x,int y,int z)
{
	e[++tot].en=y;
	e[tot].v=z;
	e[tot].next=e[x].last;
	e[x].last=tot;
}
void dg(int x,int fa)
{
	f[x]=fa;l[x]=++cnt;size[x]=1;
	for (int i=e[x].last;i;i=e[i].next)
		if (e[i].en!=fa)
		{
			dg(e[i].en,x);
			size[x]+=size[e[i].en];
		}
	r[x]=cnt;
}
void dg2(int x,int fa)
{
	for (int i=e[x].last;i;i=e[i].next)
		if (e[i].en!=fa)
		{
			for (int j=1;j<=n;j++)
			{
				if (l[j]>=l[e[i].en]&&l[j]<=r[e[i].en]) c[j][(i+1)/2]=n-size[e[i].en];
				else c[j][(i+1)/2]=size[e[i].en];
			}
			dg2(e[i].en,x);
		}
}
void dg3(int x,int fa,int las)
{
	vector<int> mx,p;mx.clear();p.clear();
	mx.push_back(0);p.push_back(0);
	for (int i=e[x].last;i;i=e[i].next)
		if (e[i].en!=fa)
		{
			if (mx[0]<size[e[i].en]) mx.clear(),p.clear(),mx.push_back(size[e[i].en]),p.push_back(i);
			else if (mx[0]==size[e[i].en]) mx.push_back(size[e[i].en]),p.push_back(i);
			dg3(e[i].en,x,i);
		}
	if (n-size[x]>mx[0]) mx.clear(),p.clear(),mx.push_back(n-size[x]),p.push_back(las);
	else if (n-size[x]==mx[0]) mx.push_back(n-size[x]),p.push_back(las);
	for (int i=0;i<p.size();i++)
		t[(p[i]+1)/2]++; 
}
void subtask1()
{
	dg(1,0);
	dg3(1,0,0);
	for (int i=1;i<n;i++) ans^=t[i];
	printf("%lld\n",ans);
}
signed main()
{
	freopen("treeq.in","r",stdin);
	freopen("treeq.out","w",stdout);
	scanf("%lld",&n);
	bool bj=false;
	for (int i=1;i<n;i++)
		scanf("%lld%lld",&f[i+1],&w[i]),add(f[i+1],i+1,w[i]),add(i+1,f[i+1],w[i]),bj|=(w[i]!=1);
	if (!bj)
	{
		subtask1();
		return 0;
	}
	dg(1,0);
	dg2(1,0);
	for (int i=1;i<n;i++)
		for (int j=1;j<=n;j++)
			a[j][i]=c[j][i]*w[i];
 	for (int i=1;i<=n;i++)
	{
		top=1;stk[top]=0;
		for (int j=1;j<n;j++)
		{
			if (a[i][stk[top]]<a[i][j]) stk[top=1]=j;
			else if (a[i][stk[top]]==a[i][j]) stk[++top]=j;
		}
		while (top) t[stk[top--]]++;
	}
	for (int i=1;i<n;i++) ans^=t[i];
	printf("%lld\n",ans);
	return 0;
}