#include<bits/stdc++.h>
#define int long long 
using namespace std;
inline int read()
{
	int x=0,f=1;char c=getchar();
	while(!isdigit(c))
	{
		if(c=='-')f=-1;
		c=getchar();
	}
	while(isdigit(c))
	{
		x=x*10+(c^48);
		c=getchar();
	}
	return x*f;
}

const int N=1e7+10;
int n;

struct edge
{
	int to,nxt,w;
	edge()
	{
		to=0;nxt=0;w=0;
	}
}e[N*2];
int tot,head[N*2];
inline void add(int a,int b,int w)
{
	e[++tot].to=b;
	e[tot].w=w;
	e[tot].nxt=head[a];
	head[a]=tot;
}
int ans=0;

namespace G
{
	int fa[N],dep[N],siz[N],son[N];
	int ed[N];
	inline void dfs1(int rt,int father)
	{
		son[rt]=-1;
		siz[rt]=1;
		dep[rt]=dep[father]+1;
		for(int i=head[rt];i;i=e[i].nxt)
		{
			int to=e[i].to;
			if(father!=to)
			{
				fa[to]=rt;  
				dfs1(to,rt);
				siz[rt]+=siz[to];
				if(son[rt]==-1||siz[to]>siz[son[rt]]) son[rt]=to;
			}
		}
	}
	inline void dfs2(int rt) 
	{
		ans = ans xor (( siz[rt]-siz[son[rt]]));
		if(siz[rt]==1)return ;
		if(son[rt]==-1)return;
		dfs2(son[rt]);
	}
}

signed main()
{
	freopen("treeq.in" , "r",stdin);
	freopen("treeq.out" , "w",stdout);
	ios::sync_with_stdio(false);
	cin>>n;
	bool flg=1;
	for(int i=2;i<=n;i++)
	{
		int f=read(),w=read();
		add(i,f,w);
		add(f,i,w);
		if(w!=1)flg=0;
	}
	G::dfs1(1,0);
	G::dfs2(1);
	cout<<ans<<endl;
	return 0;
}
