#include <bits/stdc++.h>
#define mo 998244353
#define maxN 200010
#define LL long long
using namespace std;
int n = 0; 
int val[maxN], pw[maxN], ch[maxN], a[maxN], c[maxN];
int read ()
{
	int x = 0, Fu = 1;
	char c = getchar();
	while(c < '0' || c > '9')
	{
		if(c == '-') Fu = -1;
		c = getchar();
	}
	while(c >= '0' && c <= '9')
	{
		x = x * 10 + (c - '0');
		c = getchar();
	}
	return x * Fu;
}
int Min (int x, int y) { return x < y ? x : y; }
int Max (int x, int y) { return x > y ? x : y; }
bool ok (int x)
{
	int sum = 0;
	for(int i = 1;i <= c[0]; i++) sum += a[c[i]];
	for(int i = x;i >= 1; i--) sum += a[i];
	for(int i = n;i >= 1; i--)
	{
		if(i <= x || ch[i]) { sum--; continue; }
		if(sum < a[i]) return false;
	}
	return true;
}
void dfs (int x)
{
	if(x < 1) return ; 
	int l = 1, r = x;
	while(l < r)
	{
		int mid = (l + r) >> 1;
		if(!ok(mid)) l = mid + 1;
		else r = mid;
	}
	ch[l] = true, c[++c[0]] = l;
	dfs(l - 1);
}
int calc ()
{
	for(int i = 1;i <= n; i++) a[i] = val[i];
	c[0] = 0; dfs(n);
	int res = 0;
	for(int i = 1;i <= c[0]; i++)
		ch[c[i]] = false, res = (res + pw[c[i]]) % mo;
	return res;
}
int main ()
{
	freopen("imperishable.in", "r", stdin);
	freopen("imperishable.out", "w", stdout);
	pw[0] = 1;
	for(int i = 1;i < maxN; i++) pw[i] = pw[i - 1] * 2 % mo;
	read(); n = read();
	for(int i = 1;i <= n; i++) val[i] = read();
	printf("%d\n", calc());
	int Q = read();
	while(Q--)
	{
		int x = read(), y = read();
		val[x] = y, printf("%d\n", calc());
	}
	return 0;
}