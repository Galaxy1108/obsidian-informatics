#include <bits/stdc++.h>
#define fo(i,a,b) for(int i=a;i<=b;++i)
#define fd(i,a,b) for(int i=a;i>=b;--i)
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
using namespace std;
inline int read()
{
	int X=0,w=0;char ch=0;
	while(!isdigit(ch))w|=ch=='-',ch=getchar();
	while(isdigit(ch))X=(X<<3)+(X<<1)+(ch^48),ch=getchar();
	return w?-X:X;
}
int n,m;
vector<pair<int,int>> nw,hn[50005],li[50005];
set<int> s1[50005],s2[50005];
void wak(int x,int y,int fx)
{
	if(x>n||y>m)return nw.push_back({x,y}),void();
	if(fx==0)
	{
		set<int>::iterator wz=s1[x].lower_bound(y);
		if(wz==s1[x].end())nw.push_back({x,m+1});
		else nw.push_back({x,*wz}),wak(x+1,*wz,1);
		return;
	}
	set<int>::iterator wz=s2[y].lower_bound(x);
	if(wz==s2[y].end())nw.push_back({n+1,y});
	else nw.push_back({*wz,y}),wak(*wz,y+1,0);
}
void wak1(int x,int y,int fx,int z)
{
	if(x>n||y>m)return printf("%d %d\n",x,y),void();
	if(fx==0)
	{
		set<int>::iterator wz=s1[x].lower_bound(y);
		if(wz==s1[x].end())printf("%d %d\n",x,m+1);
		else if(z<2)printf("%d %d\n",x,*wz);
			else wak1(x+1,*wz,1,z-1);
		return;
	}
	set<int>::iterator wz=s2[y].lower_bound(x);
	if(wz==s2[y].end())printf("%d %d\n",n+1,y);
	else if(z<2)printf("%d %d\n",*wz,y);
		else wak1(*wz,y+1,0,z-1);
}
int main()
{
	freopen("corridor.in","r",stdin);
	freopen("corridor.out","w",stdout);
	int tp,k;
	tp=read();n=read();m=read();k=read();
	fo(i,1,k)
	{
		int x=read(),y=read();
		s1[x].insert(y);
		s2[y].insert(x);
	}
	if(tp>5&&tp<12)
	{
		fo(i,1,n)
		{
			nw.clear();
			wak(i,1,0);
			hn[i]=nw;
		}
		fo(i,1,m)
		{
			nw.clear();
			wak(1,i,1);
			li[i]=nw;
		}
		int Q=read();
		while(Q--)
		{
			int w=read(),x=read(),y=read(),q=read()-1;
			if(x==0)
			{
				if(q>=li[y].size())q=li[y].size()-1;
				printf("%d %d\n",li[y][q].first,li[y][q].second);
			}else{
				if(q>=hn[x].size())q=hn[x].size()-1; 
				printf("%d %d\n",hn[x][q].first,hn[x][q].second);
			}
		}
		return 0;
	}
	int Q=read();
	while(Q--)
	{
		int w=read(),x=read(),y=read();
		if(w==1)
		{
			s1[x].insert(y);
			s2[y].insert(x);
			continue;
		}
		int q=read();
		if(!x)wak1(1,y,1,q);
		else wak1(x,1,0,q); 
	}
	return 0;
}