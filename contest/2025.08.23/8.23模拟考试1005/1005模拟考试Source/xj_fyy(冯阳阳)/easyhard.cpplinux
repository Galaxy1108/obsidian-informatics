#include<bits/stdc++.h>
using namespace std;
#define N 3005
int read(){
	int w=0,f=1;
	char c=' ';
	while(c<'0'||c>'9')c=getchar(),f=c=='-'?-1:f;
	while(c>='0'&&c<='9')w=w*10+c-48,c=getchar();
	return w*f;
}
struct fastmod{
    #define ull unsigned long long
    #define u128 __uint128_t
    ull b,m;
    fastmod(ull _b=998244353){b=_b,m=(ull)(((u128)(1)<<64)/b);}
    int reduce(ull a){
        ull q=(ull)(((u128)(m)*a)>>64),r=a-q*b;
        return r>=b?r-b:r;
    }
    #undef ull
    #undef u128
}F;
int mod;
struct mint{
    int x;
    mint(int X=0){x=X;}
    mint operator=(int o){return x=o,*this;}
    mint operator+=(mint o){return x=x+o.x>=mod?x+o.x-mod:x+o.x,*this;}
    mint operator-=(mint o){return x=x-o.x<0?x-o.x+mod:x-o.x,*this;}
	mint operator*=(mint o){return x=F.reduce(1ll*x*o.x),*this;}
    mint operator^=(int y){
        mint res=1,z=*this;
        while(y){
            if(y&1)res*=z;
            z*=z,y>>=1;
        }
        return x=res.x,*this;
    }
    mint operator^=(mint y){return *this^=y.x;}
    mint operator/=(mint o){return *this*=o^=(mod-2);}
    mint operator+=(int o){return x=x+o>=mod?x+o-mod:x+o,*this;}
    mint operator-=(int o){return x=x-o<0?x-o+mod:x-o,*this;}
	mint operator*=(int o){return x=F.reduce(1ll*x*o),*this;}
    mint operator/=(int o){return *this*=mint(o)^=(mod-2);}
    friend mint operator+(mint a,int b){return a+=b;}
    friend mint operator-(mint a,int b){return a-=b;}
    friend mint operator*(mint a,int b){return a*=b;}
    friend mint operator/(mint a,int b){return a/=b;}
    friend mint operator^(mint a,int b){return a^=b;}
    friend mint operator+(mint a,mint b){return a+=b;}
    friend mint operator-(mint a,mint b){return a-=b;}
    friend mint operator*(mint a,mint b){return a*=b;}
    friend mint operator/(mint a,mint b){return a/=b;}
    friend mint operator^(mint a,mint b){return a^=b;}
    bool operator!(){return !x;}
    mint operator-(){return x?mod-x:0;}
    operator int(){return x;}
};
int n,m;
mint f[2][N][2],ans;
signed main(){
	freopen("easyhard.in","r",stdin);
	freopen("easyhard.out","w",stdout);
	n=read(),m=read(),mod=read(),F=fastmod(mod);
	f[0][0][1]=1;
	for(int i=1;i<=n;i++)
		f[0][i][0]=1;
	for(int i=1,u=1;i<=m;i++,u^=1){
		memset(f[u],0,sizeof(f[u]));
		for(int j=0;j<2;j++)
			for(int k=0;k<2;k++)
				for(int l=0;l<2;l++)
					f[u][j][1]+=f[u^1][l][k];
		for(int j=2;j<=n;j++)
			for(int k=0;k<2;k++)
				for(int l=0;l<2;l++)
					f[u][j-l][k]+=f[u^1][j][k];
		for(int j=1;j<n;j++)
			for(int k=0;k<2;k++)
				for(int l=0;l<2;l++)
					f[u][j+l][k]+=f[u^1][j][k];
	}
	for(int i=0;i<=n;i++)
		ans+=f[m&1][i][1];
	printf("%d\n",(int)ans);
	return 0;
}