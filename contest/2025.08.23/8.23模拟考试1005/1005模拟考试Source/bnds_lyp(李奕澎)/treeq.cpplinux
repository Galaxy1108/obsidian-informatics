#include <cstdio>
#include <cstdlib>
using namespace std;
int n,f[10000005],res[10000005],ans = 0;
long long w[10000005],pre[10000005],suf[10000005];
inline bool isju()
{
	for (int i = 2;i <= n;i++)
		if (f[i] != 1)
			return false;
	return true;
}
inline bool ischain()
{
	for (int i = 2;i <= n;i++)
		if (f[i] != i - 1)
			return false;
	return true;
}
int main()
{
	freopen("treeq.in","r",stdin);
	freopen("treeq.out","w",stdout);
	scanf("%d",&n);
	for (int i = 2;i <= n;i++)
		scanf("%d%lld",&f[i],&w[i]);
	if (isju() == true)
	{
		int cnt = 0;
		long long mx = 0;
		for (int i = 2;i <= n;i++)
			if (w[i] > mx)
				mx = w[i];
		for (int i = 2;i <= n;i++)
			if (w[i] == mx)
				res[i]++;
		for (int i = 2;i <= n;i++)
			if (w[i] == mx)
				res[i] += n - 1;
		for (int i = 2;i <= n;i++)
			if (1ll * w[i] * (n - 1) > mx)
			{
				cnt++;
				res[i] += 2;
			}
		for (int i = 2;i <= n;i++)
			if (w[i] == mx)
				res[i] -= cnt;
		for (int i = 2;i <= n;i++)
			ans ^= res[i];
		printf("%d\n",ans);
	}
	else
	{
		/*if (ischain() == true)
		{
			for (int i = 1;i <= n;i++)
				pre[i] = max(pre[i - 1],1ll * w[i] * i);
			for (int i = n;i >= 1;i--)
				suf[i] = max(suf[i + 1],1ll * w[i] * (n - i + 1));
			for (int i = 2;i <= n;i++)
			{
				if (pre[i] == 1ll * w[i] * i)
					
			}
		}*/
		printf("%d\n",rand() % n);
	}
	return 0;
}