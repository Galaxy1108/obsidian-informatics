#include <bits/stdc++.h>
using namespace std;
#define ll long long
const ll maxn = 3005;
ll n, m, mod;
ll dp1[maxn][2], dp2[maxn][2], ans;
int main(){
	freopen("easyhard.in", "r", stdin);
	freopen("easyhard.out", "w", stdout);
	scanf("%lld%lld%lld", &n, &m, &mod);
	ll pd = 0;
	for(ll i = 1;i <= n;i ++) dp1[i][pd] = 1;
	dp2[0][pd] = 1;
	for(ll i = 1;i <= m;i ++){
		pd ^= 1;
		for(ll j = 0;j <= n;j ++) dp1[j][pd] = dp2[j][pd] = 0;
		for(ll j = 0;j <= n;j ++){
			if(j){
				dp1[j][pd] = (dp1[j][pd] + dp1[j - 1][pd ^ 1]) % mod;
				dp2[j][pd] = (dp2[j][pd] + dp2[j - 1][pd ^ 1] + dp2[j][pd ^ 1]) % mod;
				if(j == 1) dp2[j][pd] = (dp2[j][pd] + dp1[j][pd ^ 1]) % mod;
				else dp1[j][pd] = (dp1[j][pd] + dp1[j][pd ^ 1]) % mod;
			}
			if(j < n){
				dp2[j][pd] = (dp2[j][pd] + dp2[j + 1][pd ^ 1] + dp2[j][pd ^ 1]) % mod;
				if(!j) dp2[j][pd] = (dp2[j][pd] + dp1[j + 1][pd ^ 1]) % mod;
				else dp1[j][pd] = (dp1[j][pd] + dp1[j + 1][pd ^ 1] + dp1[j][pd ^ 1]) % mod;
			}
		}
	}
	for(ll j = 0;j <= n;j ++) ans = (ans + dp2[j][pd]) % mod;
	printf("%lld\n", ans);
	return 0;
}