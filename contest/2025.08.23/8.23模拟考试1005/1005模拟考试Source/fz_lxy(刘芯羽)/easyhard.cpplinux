#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<algorithm>
#include<cmath>
#include<map>
#include<queue>
using namespace std;
const int N=3e3+5;
int n,m,mod,ans;
int f[2][N][N];
inline int read()
{
	int s=0,t=1;
	char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')t=-1;ch=getchar();}
	while(ch>='0'&&ch<='9') s=(s<<1)+(s<<3)+(ch^48),ch=getchar();
	return s*t;
}
int main()
{
	freopen("easyhard.in","r",stdin);
	freopen("easyhard.out","w",stdout);
	n=read();
	m=read();
	mod=read();
	for(int i=0;i<=n;++i)
		f[0][i][n-i]=1;
	for(int i=1;i<=2*m;++i)
		for(int j=0;i+j<=n+(i/2)*2;++j)
		{
			int k=n+(i/2)*2-i-j;
			f[i&1][j][k]=0;
			if(i&1)
			{
				f[i&1][j][k]=(f[(i-1)&1][j+1][k]+f[(i-1)&1][j][k+1])%mod;
			}
			else
			{
				if(j) f[i&1][j][k]=(f[i&1][j][k]+f[(i-1)&1][j-1][k])%mod;
				if(k) f[i&1][j][k]=(f[i&1][j][k]+f[(i-1)&1][j][k-1])%mod;
			}
		}
	for(int i=0;i<=n;++i)
		ans=(ans+f[0][i][n-i])%mod;
	printf("%d",ans);
	return 0;
}