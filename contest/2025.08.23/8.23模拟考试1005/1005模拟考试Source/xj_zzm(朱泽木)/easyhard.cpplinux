#include<bits/stdc++.h>
#define int long long
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define x first
#define y second
#define WT int TT=read();while(TT--)
using namespace std;

inline int read()
{
    char c=getchar();int x=0;bool f=0;
    for(;!isdigit(c);c=getchar())f^=!(c^45);
    for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);
    if(f)x=-x;return x;
}
inline void ckmax(int &a,int b){a=(a>b?a:b);}
inline void ckmin(int &a,int b){a=(a<b?a:b);}

const int M=3010;
int n,m,Mod,dp[M*2][M];

int F(int x){return x>=Mod?x-Mod:x;}

signed main()
{
	freopen("easyhard.in","r",stdin);
	freopen("easyhard.out","w",stdout);
	n=read(),m=read(),Mod=read();
	for (int i=0;i<=n;i++)dp[0][i]=1%Mod;
	for (int i=1;i<=m*2;i++)
		for (int j=0;j<=n;j++)
		{
			if ((i&1)^1)
			{
				if (j==0)dp[i][j]=dp[i-1][j];
				else dp[i][j]=F(dp[i-1][j]+dp[i-1][j-1]);
			}
			else if (j!=n) dp[i][j]=F(dp[i-1][j+1]+dp[i-1][j]);
		}
	int ans=0;
	for (int j=0;j<=n;j++)ans=F(ans+dp[m*2][j]);
//	cerr<<ans<<'\n';
	memset(dp,0,sizeof(dp));
	for (int i=0;i<n;i++)dp[0][i]=1%Mod;
	for (int i=1;i<=m*2;i++)
		for (int j=0;j<n;j++)
		{
			if ((i&1)^1)
			{
				if (j==0)dp[i][j]=dp[i-1][j];
				else dp[i][j]=F(dp[i-1][j]+dp[i-1][j-1]);
			}
			else if (j!=n-1) dp[i][j]=F(dp[i-1][j+1]+dp[i-1][j]);
		}
	for (int j=0;j<n;j++)ans=F(ans-dp[m*2][j]+Mod);
	cout<<ans<<'\n';
	return 0;
}