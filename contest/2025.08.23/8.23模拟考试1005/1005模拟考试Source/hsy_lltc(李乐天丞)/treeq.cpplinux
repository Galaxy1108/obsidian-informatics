#include <bits/stdc++.h>
using namespace std;
const int maxn=1e7+10;
const long long INF=1e18;
inline int read()
{
	int x=0,f=1;char c=getchar();
	while(!isdigit(c)) {if(c=='-') f=-1;c=getchar();}
	while(isdigit(c)) {x=x*10+(c^48);c=getchar();}
	return x*f;
}
int tot,head[maxn],to[maxn<<1],nxt[maxn<<1],val[maxn<<1];
int n;
int ansk[maxn],sz[maxn],ans;
long long maxe;
inline void add(int u,int v,int w)
{
	tot++;
	to[tot]=v;
	nxt[tot]=head[u];
	head[u]=tot;
	val[tot]=w;
}
inline void dfs1(int u,int fa)
{
	sz[u]=1;
	for(int i=head[u];i;i=nxt[i])
	{
		int v=to[i];
		if(v==fa) continue ;
		dfs1(v,u);
		sz[u]+=sz[v];
	}
}
inline void dfs2(int u,int fa)
{
	for(int i=head[u];i;i=nxt[i])
	{
		int v=to[i];
		if(v==fa) continue ;
		maxe=max(maxe,(long long)sz[v]*(long long)val[i]);
		dfs2(v,u);
	}
}
inline void dfs3(int u,int fa)
{
	for(int i=head[u];i;i=nxt[i])
	{
		int v=to[i];
		if(v==fa) continue ;
		if(maxe==(long long)sz[v]*(long long)val[i]) ansk[i]++;
		dfs3(v,u);
	}
}
signed main()
{
	freopen("treeq.in","r",stdin);
	freopen("treeq.out","w",stdout);
	n=read();
	for(int i=1;i<n;i++)
	{
		int u=read(),v=read(),w=read();
		add(u,v,w);add(v,u,w);
	}
	for(int i=1;i<=n;i++)
	{
		maxe=-INF;dfs1(i,0);dfs2(i,0);dfs3(i,0);
	}
	ans=0;
	for(int i=1;i<=tot;i+=2)
	{
		ans=ans^(ansk[i]+ansk[i+1]);
	}
//	for(int i=1;i<=tot;i+=2)
//	{
//		printf("%lld\n",ansk[i]+ansk[i+1]);
//	}
	printf("%lld",ans);
	return 0;
}