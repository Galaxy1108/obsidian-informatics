#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
const int MX = 2005;
int type, n, m, k, x, y, Q, w, q, mp[MX][MX][3], d;
int main()
{
	freopen("corridor.in", "r", stdin);
	freopen("corridor.out", "w", stdout);
	scanf("%d%d%d%d", &type, &n, &m, &k);
	for (int i = 1; i <= k; i++) 
	{
		scanf("%d%d", &x, &y);
		mp[x][y][0] = 1;
	}
	for (int i = 1; i <= n; i++)
	{
		mp[i][m][1] = 1;
		for (int j = m - 1; j >= 1; j--)
		{
			if (mp[i][j + 1][0]) mp[i][j][1] = 1;
			else mp[i][j][1] = mp[i][j + 1][1] + 1;
		}
	}
	for (int j = 1; j <= m; j++)
	{
		mp[n][j][2] = 1;
		for (int i = n - 1; i >= 1; i--)
		{
			if (mp[i + 1][j][0]) mp[i][j][2] = 1;
			else mp[i][j][2] = mp[i + 1][j][2] + 1;
		}
	}
	scanf("%d", &Q);
	for (int i = 1; i <= Q; i++)
	{
		scanf("%d%d%d", &w, &x, &y);
		if (w == 1) {
			mp[x][y][0] = 1;
			for (int j = y - 1; j >= 1; j--)
			{
				if (mp[x][j + 1][0]) mp[x][j][1] = 1;
				else mp[x][j][1] = mp[x][j + 1][1] + 1;
			}
			for (int i = x - 1; i >= 1; i--)
			{
				if (mp[i + 1][y][0]) mp[i][y][2] = 1;
				else mp[i][y][2] = mp[i + 1][y][2] + 1;
			}
		}
		else {
			scanf("%d", &q);
			if (!x) x++, d = 2;
			else y++, d = 1;
			for (int i = 1; i <= q; i++)
			{
				if (d == 1) y += mp[x][y][1];
				else x += mp[x][y][2];
				if (x > n || y > m) break;
				d = 3 - d;
			}
			printf("%d %d\n", x, y);
		}
	}
	return 0;
}
