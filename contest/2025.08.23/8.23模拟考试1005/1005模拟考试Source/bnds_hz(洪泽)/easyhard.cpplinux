#include <cstdio>
#include <algorithm>
using namespace std;
long long a[20], s0, s1, m0, m1;
bool check(long long n, long long m) {
	s0 = s1 = m0 = m1 = 0;
	for (long long i = 1; i <= m; i++) {
		if (a[i] == 0) {
			s0--;
			m0 = min(m0, s0);
			s1++;
			m1 = min(m1, s1);
		} else if (a[i] == 1) {
			s0--;
			m0 = min(m0, s0);
			s0++;
			m0 = min(m0, s0);
		} else if (a[i] == 2) {
			s1--;
			m1 = min(m1, s1);
			s1++;
			m1 = min(m1, s1);
		} else {
			s0++;
			m0 = min(m0, s0);
			s1--;
			m1 = min(m1, s1);
		}
	}
	if (-m0 + -m1 <= n) return true;
	else return false;
}
int main() {
	freopen("easyhard.in", "r", stdin);
	freopen("easyhard.out", "w", stdout);
	long long m, n, p;
	scanf("%lld%lld%lld", &n, &m, &p);
	long long cnt = 0;
	for (long long k = 0; k < (1 << (2 * m)); k++) {
		for (long long i = 0; i < m; i++) {
			a[i + 1] = 0;
			if (k & (1 << (2 * i))) a[i + 1] += 2;
			if (k & (1 << (2 * i + 1))) a[i + 1]++;
		}
		if (check(n, m)) {
			cnt = (cnt + 1) % p;
		}
	}
	printf("%lld", cnt);
	return 0;
}