#include<cstdio>
#include<algorithm>
const int N=70;
int f[N][N<<1][N][N],n,m,MOD;
inline long long ksm(long long b,long long p)
{
	long long ans=1%MOD;
	while(p)
	{
		if(p&1) ans=ans*b%MOD;
		p>>=1,b=b*b%MOD;
	}
	return ans;
}
inline void Add(int &x,int y){if((x+=y)>=MOD) x-=MOD;}
int main()
{
	freopen("easyhard.in","r",stdin);
	freopen("easyhard.out","w",stdout);
	scanf("%d%d%d",&n,&m,&MOD);
	if(m>=n){printf("%lld",ksm(4ll,n));return 0;}
	f[0][0][0][1]=f[0][1][1][0]=1%MOD;
	int ans=0;
	for(int i=0;i<m-1;++i)
		for(int j=0;j<=2*i+1;++j)
			for(int k=0;k<=i+1;++k)
				for(int l=0;l<=i+1;++l)
				{
					int p=std::max(k,j-(i+1)),q=std::max(l,(i+1)+1-j);
					if(p+q<=n) Add(f[i+1][j][p][q],f[i][j][k][l]);
					p=std::max(k,j+1-(i+1)),q=std::max(l,(i+1)+1-(j+1));
					if(p+q<=n) Add(f[i+1][j+1][p][q],(f[i][j][k][l]<<1)%MOD);
					p=std::max(k,j+2-(i+1)),q=std::max(l,(i+1)+1-(j+2));
					if(p+q<=n) Add(f[i+1][j+2][p][q],f[i][j][k][l]);
				}
	for(int j=0;j<=2*n+1;++j) for(int k=0;k<=n+1;++k) for(int l=0;l<=n+1;++l) Add(ans,f[m-1][j][k][l]);
	printf("%d",(ans<<1)%MOD);
	return 0;
}