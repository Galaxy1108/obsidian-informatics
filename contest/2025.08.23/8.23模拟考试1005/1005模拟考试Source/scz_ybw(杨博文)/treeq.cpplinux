#include<bits/stdc++.h>
using namespace std;
const int maxn=1e7+10;
vector<int> e[maxn];
int siz[maxn],num,dfn[maxn];
void dfs(int u)
{
	dfn[u]=++num;
	siz[u]=1;
	for(int v:e[u])
	{
//		if(v==fa)continue;
		dfs(v);
		siz[u]+=siz[v];
	}
}
pair<long long,pair<int,int> > xx[maxn<<1];
int tag[maxn<<2],sum[maxn<<2];
void mo(int p,int l,int r,int ll,int rr)
{
	if(ll>rr)return;
	if(l==ll&&r==rr){tag[p]=1;sum[p]=0;return ;}
	int mid=(l+r)>>1;
	if(rr<=mid)mo(p<<1,l,mid,ll,rr);
	else if(ll>mid)mo(p<<1|1,mid+1,r,ll,rr);
	else mo(p<<1,l,mid,ll,mid),mo(p<<1|1,mid+1,r,mid+1,rr);
	sum[p]=sum[p<<1]+sum[p<<1|1];
}
int u[maxn],v[maxn],w[maxn];
int q(int p,int l,int r,int ll,int rr)
{
	if(ll>rr)return 0;
	if(tag[p])return 0;
	if(l==ll&&r==rr)return sum[p];
	int mid=(l+r)>>1;
	if(rr<=mid)return q(p<<1,l,mid,ll,rr);
	else if(ll>mid)return q(p<<1|1,mid+1,r,ll,rr);
	else return q(p<<1,l,mid,ll,mid)+q(p<<1|1,mid+1,r,mid+1,rr);
}
int ans[maxn],n;
void build(int p,int l,int r)
{
	sum[p]=r-l+1;
	if(l==r)return ;
	int mid=(l+r)>>1;
	build(p<<1,l,mid);
	build(p<<1|1,mid+1,r);
}
int main()
{
	freopen("treeq.in","r",stdin);
	freopen("treeq.out","w",stdout);
	ios::sync_with_stdio(0);
	cin>>n;
	for(int i=2;i<=n;i++)
	{
		cin>>u[i]>>w[i];
		v[i]=i;
		e[u[i]].emplace_back(v[i]);
//		e[v[i]].emplace_back(u[i]);
	}
	dfs(1);
	int tt=0;
	for(int i=2;i<=n;i++)
	{
		if(siz[v[i]]>=siz[u[i]])
			swap(v[i],u[i]);
		xx[++tt]={1ll*w[i]*siz[v[i]],{i,1}};
		xx[++tt]={1ll*w[i]*(n-siz[v[i]]),{i,0}};
	}
	sort(xx+1,xx+tt+1);
	build(1,1,n);
	assert(xx[1].first>0);
	for(int i=tt;i>=1;i--)
	{
		int j=i;
		while(xx[j-1].first==xx[i].first)
			--j;
		int tttt=xx[i].second.first;
//		cerr<<1ll*siz[v[tttt]]*w[tttt]<<" "<<1ll*(n-siz[v[tttt]])*w[tttt]<<" "<<xx[i].first<<endl;
		for(int x=j;x<=i;x++)
		{
			int id=xx[x].second.first,typ=xx[x].second.second;
//			cerr<<dfn[v[i]]<<" "<<v[i]<<endl;
			if(typ==0)
				ans[id]+=q(1,1,n,dfn[v[id]],dfn[v[id]]+siz[v[id]]-1);
			else
				ans[id]+=q(1,1,n,1,dfn[v[id]]-1)+q(1,1,n,dfn[v[id]]+siz[v[id]],n);
		}
		for(int x=j;x<=i;x++)
		{
			int id=xx[x].second.first,typ=xx[x].second.second;
			if(typ==0)
				mo(1,1,n,dfn[v[id]],dfn[v[id]]+siz[v[id]]-1);
			else
				mo(1,1,n,1,dfn[v[id]]-1),mo(1,1,n,dfn[v[id]]+siz[v[id]],n);
		}
//		cerr<<i<<" "<<j<<endl;
		i=j;
		if(q(1,1,n,1,n)==0)break;
	}
	int nw=0;
	long long sum=0;
	for(int i=2;i<=n;i++){
		nw^=ans[i];
		sum+=ans[i];
	}
	cout<<nw<<endl;
	return 0;
}