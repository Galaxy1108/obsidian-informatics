#include <stdio.h>
#include <algorithm>
#include <cstring>
#include <iostream>
using namespace std;

const int INF = (int)1e9 + 10;

const int P = 998244353;

const int NR = 2 * 1e5 + 10;

int ID;
int n, Q;
int a[NR];
int mi[NR];

int calc() {
	int ret = INF;
	for (int S = 1; S < (1 << n); S++) {
		int sum = 0, mx = 0, res = 0;
		for (int i = 1; i <= n; i++)
			if (S & (1 << (i - 1))) sum += a[i], res += (1 << i);
			else mx = max(mx, a[i]);
		if (mx <= sum) ret = min(ret, res);
	}
	return ret;
}

int main()
{
#ifdef WYZ
	freopen("1.in", "r", stdin);
	freopen("1.out", "w", stdout);
#else
	freopen("imperishable.in", "r", stdin);
	freopen("imperishable.out", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	
	mi[0] = 1;
	for (int i = 1; i <= 200000; i++) mi[i] = mi[i - 1] * 2 % P;
	
	cin >> ID;
	cin >> n;
	for (int i = 1; i <= n; i++) cin >> a[i];
	cout << calc() << '\n';
	
	cin >> Q;
	while (Q--) {
		int x, y; cin >> x >> y;
		a[x] = y;
		cout << calc() << '\n';
	}
	
	return 0;
}