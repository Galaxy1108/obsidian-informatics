#include <stdio.h>
#include <algorithm>
#include <cstring>
#include <iostream>
using namespace std;

const int delta[2][2] = {{1, 0}, {0, 1}};

const int NR = 20000 + 10, KR = 150000 + 10, TN = 100 + 10;

int ID;
int n, m, T, Q;
bool v[TN][TN];

int main()
{
#ifdef WYZ
	freopen("1.in", "r", stdin);
	freopen("1.out", "w", stdout);
#else
	freopen("corridor.in", "r", stdin);
	freopen("corridor.out", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	
	cin >> ID >> n >> m >> T;
	
	for (int i = 1; i <= T; i++) {
		int x, y; cin >> x >> y;
		v[x][y] = 1;
	}
	cin >> Q;
	while (Q--) {
		int opt, x, y, q;
		cin >> opt;
		if (opt == 1) {
			cin >> x >> y;
			v[x][y] = 1;
		} else if (opt == 2) {
			cin >> x >> y >> q;
			int cnt = 0;
			bool d = (y == 0);
			while (1) {
				x += delta[d][0], y += delta[d][1];
				if (x > n || y > m) break;
				if (v[x][y]) cnt++, d ^= 1;
				if (cnt == q) break;
			}
			cout << x << ' ' << y << '\n';
		}
	}
	
	return 0;
}