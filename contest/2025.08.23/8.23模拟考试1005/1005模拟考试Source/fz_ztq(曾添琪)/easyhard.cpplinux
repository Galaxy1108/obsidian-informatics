#include <bits/stdc++.h>
#define FOR(i,j,k) for(int i=j; i<=k; ++i)
#define ROF(i,j,k) for(int i=j; i>=k; --i)
inline int read (void) {
  int x = 0, f = 1, ch = getchar();
  while(!isdigit(ch)) { if(ch == '-') f = -f; ch = getchar(); }
  while(isdigit(ch)) { x = x * 10 + ch - '0'; ch = getchar(); }
  return x * f;
}
const int maxn = 305;
int p, f[2][maxn][maxn];
inline void inc (int &x, int y) { (x += y) >= p ? x -= p : x; }
int main (void) {
  freopen("easyhard.in", "r", stdin);
  freopen("easyhard.out", "w", stdout);
  int n = read(), m = read(); p = read();
  inc (f[0][0][0], 1);
  FOR(T,1,m) {
    FOR(i,0,m) FOR(j,0,m) {
      int k = n - i - j;
      if(k < 0 || !f[0][i][j]) continue;
      if(i + k)
        if(!i) inc (f[1][i+1][j+1], f[0][i][j]);
        else inc (f[1][i][j+1], f[0][i][j]);
      if(j + k)
        if(!j) inc (f[1][i+1][j+1], f[0][i][j]);
        else inc (f[1][i+1][j], f[0][i][j]);
      f[0][i][j] = 0;
    }
    FOR(i,0,m) FOR(j,0,m) {
      int k = n + 1 - i - j;
      if(k < 0 || !f[1][i][j]) continue;
      if(i + k)
        if(!i) inc (f[0][i][j], f[1][i][j]);
        else inc (f[0][i-1][j], f[1][i][j]);
      if(j + k)
        if(!j) inc (f[0][i][j], f[1][i][j]);
        else inc (f[0][i][j-1], f[1][i][j]);
      f[1][i][j] = 0;
    }
  }
  int ans = 0;
  FOR(i,0,m) FOR(j,0,m) {
    int k = n - i - j;
    if(k < 0 || !f[0][i][j]) continue;
    inc (ans, f[0][i][j]);
  }
  printf("%d\n", ans);
  return 0;
}
