#include<bits/stdc++.h>
using namespace std;
namespace FAST_IO
{
	template<typename T> void read(T &a)
	{
		a=0;
		T f=1;
		char c=getchar();
		while(!isdigit(c))
		{
			if(c=='-')
			{
				f=-1;
			}
			c=getchar();
		}
		while(isdigit(c))
		{
			a=a*10+c-'0';
			c=getchar();
		}
		a=a*f;
	}
	template <typename T> void write(T a)
	{
		if(a<0)
		{
			a=-a;
			putchar('-');
		}
		if(a>9)
		{
			write(a/10);
		}
		putchar(a%10+'0');
	}
	template <typename T> void writeln(T a)
	{
		write(a);
		puts("");
	}
	template <typename T> void writespace(T a)
	{
		write(a);
		putchar(' ');
	}
}
const int mod=998244353,maxn=2e5+10;
int num;
int n,q;
int a[maxn];
long long allsum=0; 
int pow2[maxn];
void solve()
{
	long long ans=0,nsum=allsum;
	int nmax=0;
	for(int i=n;i>=1;i--)
	{
		if(nsum-a[i]>=max(nmax,a[i]))
		{
			nsum-=a[i];
			nmax=max(nmax,a[i]);
		}
		else
		{
			ans+=pow2[i];
			ans%=mod;
		}
	}
	FAST_IO::writeln(ans);
}
int main()
{
	freopen("imperishable.in","r",stdin);
	freopen("imperishable.out","w",stdout);
	FAST_IO::read(num);
	FAST_IO::read(n);
	pow2[0]=1;
	for(int i=1;i<=n;i++)
	{
		FAST_IO::read(a[i]);
		allsum+=a[i];
		pow2[i]=pow2[i-1]*2%mod;
	}
	FAST_IO::read(q);
	solve();
	while(q--)
	{
		int x,y;
		FAST_IO::read(x);
		FAST_IO::read(y);
		allsum=allsum-a[x]+y;
		a[x]=y;
		solve();
	} 
}
